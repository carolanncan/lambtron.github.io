<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Andy Jiang</title>
  <link href="http://blog.andyjiang.com/atom.xml" rel="self"/>
  <link href="http://blog.andyjiang.com"/>
  <updated>2015-08-13T22:37:16.287Z</updated>
  <id>http://blog.andyjiang.com</id>
  <author>
    <name>Andy Jiang</name>
  </author>
  <entry>
    <title>Introduction to Metalsmith</title>
    <link href="http://blog.andyjiang.com/introduction-to-metalsmith"/>
    <id>http://blog.andyjiang.com/introduction-to-metalsmith</id>
    <updated>2015-08-13T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;When I first encountered &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith&lt;/a&gt;, I thought that it was similar to &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. It wasn’t until I had worked on two to three projects using Metalsmith that I fully realized its flexibility and power. This post is an introduction to Metalsmith and its extensibility.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;When I first encountered &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith&lt;/a&gt;, I thought that it was similar to &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. It wasn&amp;#x2019;t until I had worked on two to three projects using Metalsmith that I fully realized its flexibility and power. This post is an introduction to Metalsmith and its extensibility.&lt;/p&gt;
&lt;h2 id=&quot;what-is-metalsmith-&quot;&gt;What is Metalsmith?&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith website&lt;/a&gt; has a good description of what it does:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We keep referring to Metalsmith as a &amp;#x201C;static site generator&amp;#x201D;, but it&amp;#x2019;s a lot more than that. Since everything is a plugin, the core library is actually just an abstraction for manipulating a directory of files.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; is an opinionated approach to designing and building web applications, &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; is the same for building blogs and &lt;a href=&quot;https://middlemanapp.com/&quot;&gt;Middleman&lt;/a&gt; is the same for building static sites. Conversely, &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; / &lt;a href=&quot;http://koajs.com/&quot;&gt;Koa&lt;/a&gt; are &lt;em&gt;unopinionated&lt;/em&gt; in their approaches, as is Metalsmith to static sites.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The term &amp;#x2018;&lt;a href=&quot;http://stackoverflow.com/questions/802050/what-is-opinionated-software&quot;&gt;opinionated&lt;/a&gt;&amp;#x2018; suggests how many software design decisions have already been decided for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Metalsmith, at its core, takes files in a source directory, perform operations on them via plugins, and writes those files into a destination directory. Plugins can do virtually anything: create new files, filter out files, modify files based on some logic, etc (note this means that plugin order &lt;em&gt;does&lt;/em&gt; matter; transformations done by one plugin can be seen and used by following plugins, making the process a modular build pipeline). The entire &lt;a href=&quot;https://github.com/segmentio/metalsmith.io/blob/master/src/plugins.json&quot;&gt;ecosystem of plugins&lt;/a&gt; is what makes Metalsmith so flexible.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that you have control over telling Metalsmith the location of the source and destination directories.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-does-metalsmith-and-its-plugins-work-&quot;&gt;How does Metalsmith (and its plugins) work?&lt;/h2&gt;
&lt;p&gt;For example, let&amp;#x2019;s see what Metalsmith does if there are no plugins. Here is the directory (&lt;code&gt;./node_modules&lt;/code&gt; is hidden):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
&amp;#x251C;&amp;#x2500;&amp;#x2500; src
|   &amp;#x251C;&amp;#x2500;&amp;#x2500; index.md
|   &amp;#x2514;&amp;#x2500;&amp;#x2500; nested
|       &amp;#x2514;&amp;#x2500;&amp;#x2500; index.md
&amp;#x2514;&amp;#x2500;&amp;#x2500; index.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is &lt;code&gt;index.js&lt;/code&gt; that we&amp;#x2019;ll be running (you can also run Metalsmith via CLI, more on that later):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var Metalsmith = require(&amp;apos;metalsmith&amp;apos;);

Metalsmith(__dirname)
  .build(function(err) {
    if (err) throw err;
  });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is what the &lt;code&gt;./build&lt;/code&gt; directory would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.
&amp;#x251C;&amp;#x2500;&amp;#x2500; src
|   &amp;#x251C;&amp;#x2500;&amp;#x2500; index.md
|   &amp;#x2514;&amp;#x2500;&amp;#x2500; nested
|       &amp;#x2514;&amp;#x2500;&amp;#x2500; index.md
&amp;#x2514;&amp;#x2500;&amp;#x2500; index.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;..nothing has changed (not even the text inside the markdown files). This is expected since no plugins (i.e. transforms) are being performed.&lt;/p&gt;
&lt;p&gt;Let&amp;#x2019;s dig one level deeper and see what Metalsmith is seeing to help us build a better picture of what&amp;#x2019;s going on. We&amp;#x2019;ll add this really simple function (hint: it&amp;#x2019;s a plugin!) that just logs some info:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var Metalsmith = require(&amp;apos;metalsmith&amp;apos;);

Metalsmith(__dirname)

  // Your first plugin! Wewt!
  .use(function(files, metalsmith, done) {
    console.log(&amp;apos;Files: &amp;apos;);
    console.log(files);
    console.log();
    console.log(&amp;apos;Metalsmith: &amp;apos;);
    console.log(metalsmith);
  })

  .build(function(err) {
    if (err) throw err;
  });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is the output:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-json&quot;&gt;Files:
{ &amp;apos;index.md&amp;apos;:
   { contents: &amp;lt;Buffer 0a 48 65 6c 6c 6f 2c 20 77 6f 72 6c 64 21&amp;gt;,
     mode: &amp;apos;0644&amp;apos;,
     stats: { ... } },
  &amp;apos;nested/index.md&amp;apos;:
   { contents: &amp;lt;Buffer 0a 49 27 6d 20 69 6e 20 61 20 6e 65 73 74 65 64 20 66 6f 6c 64 65 72 21&amp;gt;,
     mode: &amp;apos;0644&amp;apos;,
     stats: { ... } } }

Metalsmith:
{ plugins: [ [Function] ],
  ignores: [],
  _directory: &amp;apos;/Users/andyjiang/Developer/metalsmith-example&amp;apos;,
  _metadata: {},
  _source: &amp;apos;src&amp;apos;,
  _destination: &amp;apos;build&amp;apos;,
  _concurrency: Infinity,
  _clean: true,
  _frontmatter: true }
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, there is a ton of junk in &lt;code&gt;files&lt;/code&gt;! Just note that the property &lt;code&gt;contents&lt;/code&gt; in each file is the only important thing, you can ignore everything else.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We see that the argument &lt;code&gt;files&lt;/code&gt; in our function is an object map of all the files in the source directory (and that &lt;code&gt;files[PATH].contents&lt;/code&gt; is the body of the file). Many plugins will iterate through &lt;code&gt;files&lt;/code&gt; and perform operations on them.&lt;/p&gt;
&lt;p&gt;Also, we see that the second argument, &lt;code&gt;metalsmith&lt;/code&gt;, contains some metadata: plugins, directory, even an explicit object for metadata, etc. This is important, because plugins can store config or other information in metadata, or access the metadata to help with file operations.&lt;/p&gt;
&lt;p&gt;The last argument, &lt;code&gt;done&lt;/code&gt;, is a function that you can call to tell Metalsmith to go to the next plugin in its queue (or &lt;code&gt;.build()&lt;/code&gt;, if it&amp;#x2019;s the last one).&lt;/p&gt;
&lt;h3 id=&quot;front-matter-makes-it-easy&quot;&gt;Front-matter Makes it Easy&lt;/h3&gt;
&lt;p&gt;Front-matter is &lt;a href=&quot;&quot;&gt;YAML&lt;/a&gt; that can precede &lt;em&gt;any&lt;/em&gt; file (sandwiched by two &lt;code&gt;---&lt;/code&gt;). Metalsmith will automatically convert this to a key-value in the &lt;code&gt;file&lt;/code&gt;&amp;#x2018;s object. For example, the below in &lt;code&gt;./src/index.md&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-yaml&quot;&gt;---
title: &amp;quot;Teach me how to dougie&amp;quot;
draft: false
foo: bar
---

Hello, world!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Will become this (we&amp;#x2019;re just &lt;code&gt;console.log()&lt;/code&gt;ing the &lt;code&gt;file&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-json&quot;&gt;{ &amp;apos;index.md&amp;apos;:
   { title: &amp;apos;Teach me how to dougie&amp;apos;,
     draft: false,
     foo: &amp;apos;bar&amp;apos;,
     contents: &amp;lt;Buffer 0a 0a 48 65 6c 6c 6f 2c 20 77 6f 72 6c 64 21&amp;gt;,
     mode: &amp;apos;0644&amp;apos;,
     stats:
      { ... } }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now have &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;draft&lt;/code&gt;, and &lt;code&gt;foo&lt;/code&gt; available for our plugins to use. Many plugins rely on the front-matter to easily transform files, such as filtering out files with &lt;code&gt;draft: true&lt;/code&gt; or organizing files into different collections (e.g. &lt;code&gt;collection: articles&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Here are some example plugins that you can check out to see how they&amp;#x2019;re manipulating the &lt;code&gt;files&lt;/code&gt; and &lt;code&gt;metalsmith&lt;/code&gt; arguments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-drafts/blob/master/lib/index.js&quot;&gt;metalsmith-drafts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-metadata/blob/master/lib/index.js&quot;&gt;metalsmith-metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-permalinks/blob/master/lib/index.js&quot;&gt;metalsmith-permalinks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-excerpts/blob/master/lib/index.js&quot;&gt;metalsmith-excerpts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-do-i-use-metalsmith-&quot;&gt;How do I use Metalsmith?&lt;/h2&gt;
&lt;p&gt;Because Metalsmith relies on its plugins to be useful, the options for plugins to use can be overwhelming.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://i.imgur.com/mP5YIkM.jpg&quot;&gt;With great power, comes great responsibility.&lt;img src=&quot;http://i.imgur.com/mP5YIkM.jpg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Uncle Ben&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you are building a blog generator, then here are some plugins (in order) that may help you get started (in fact, these are what we use to build the &lt;a href=&quot;https://segment.com/blog/&quot;&gt;Segment blog&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-build-date&quot;&gt;build date&lt;/a&gt;: add a global &lt;code&gt;date&lt;/code&gt; property to the Metalsmith metadata that can be used later (like in the atom feed)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-drafts&quot;&gt;drafts&lt;/a&gt;: delete any file that has &lt;code&gt;draft: true&lt;/code&gt; in the front-matter&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-excerpt&quot;&gt;excerpt&lt;/a&gt;: extract the first paragraph of each file into &lt;code&gt;file.excerpt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-collections&quot;&gt;collections&lt;/a&gt;: group files by category (this is a neat plugin that will find all files in the same category and connect them; it&amp;#x2019;ll add the second file as a property &lt;code&gt;next&lt;/code&gt; of the first file, etc.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-markdown&quot;&gt;markdown&lt;/a&gt;: turn markdown into HTML by replacing the &lt;code&gt;file.contents&lt;/code&gt; with HTML (using &lt;a href=&quot;https://github.com/chjj/marked&quot;&gt;marked&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;a custom plugin that saves the &lt;code&gt;contents&lt;/code&gt; to &lt;code&gt;body&lt;/code&gt; so it can be used in the atom feed (later, &lt;code&gt;contents&lt;/code&gt; is going to be merged with the layouts plugin)&lt;/li&gt;
&lt;li&gt;a custom plugin that attaches author metadata to each file (uses an internal web service that returns team members at Segment)&lt;/li&gt;
&lt;li&gt;a custom plugin that attaches category metadata to each post&lt;/li&gt;
&lt;li&gt;a custom plugin that attaches related posts to each post; it adds a &lt;code&gt;related&lt;/code&gt; property whose value is an array of other posts to each post &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-permalinks&quot;&gt;permalinks&lt;/a&gt;: add &lt;code&gt;path&lt;/code&gt; object to each &lt;code&gt;file&lt;/code&gt; that will serve as the URL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-only-build&quot;&gt;only-build&lt;/a&gt;: delete any reference from the &lt;code&gt;files&lt;/code&gt; hash that is not specified to be built (for performance)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith-templates&quot;&gt;templates&lt;/a&gt;: pass each file in the &lt;code&gt;files&lt;/code&gt; hash through the template denoted &lt;code&gt;file.template&lt;/code&gt;, so that the written output in the destination file is the final HTML (templates is deprecated and split into two smaller plugins&amp;#x2014;&lt;a href=&quot;https://github.com/superwolff/metalsmith-layouts&quot;&gt;metalsmith-layouts&lt;/a&gt; and &lt;a href=&quot;https://github.com/superwolff/metalsmith-in-place&quot;&gt;metalsmith-in-place&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still with me? Thats a lot to take in. And on top of that, some of the above plugins require specific things to include in front-matter or in variables set in the environment to work properly.&lt;/p&gt;
&lt;p&gt;Aside from blog generators (of which you could make tons of different ones with different plugins), here are some other ideas for which you can use Metalsmith:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project scaffolder&lt;/li&gt;
&lt;li&gt;a build tool (convert, concatenate, and minifi CSS files)&lt;/li&gt;
&lt;li&gt;an ebook generator&lt;/li&gt;
&lt;li&gt;technical docs builder&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/segmentio/metalsmith/tree/master/examples&quot;&gt;More examples&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope this helps clarify a few things and gives you enough information to get deeper in Metalsmith! Here are some further resources to help you out:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://keetology.com/blog/rebuilding-keetology&quot;&gt;Rebuilding Keetology&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.lecomte.me/posts/2014/way-of-metalsmith/&quot;&gt;Way of Metalsmith&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.thenewdynamic.org/&quot;&gt;Static is The New Dynamic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.okaythree.com/2015/03/building-a-blog-with-metalsmith/&quot;&gt;Building a Blog with Metalsmith&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://azurelogic.com/posts/building-a-blog-with-metalsmith/&quot;&gt;Building a Blog with Metalsmith&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Publish to Blog via Slack</title>
    <link href="http://blog.andyjiang.com/publish-to-blog-via-slack"/>
    <id>http://blog.andyjiang.com/publish-to-blog-via-slack</id>
    <updated>2015-08-09T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Because I want the future of accomplishing &lt;em&gt;anything&lt;/em&gt; with &lt;img width=22px src=&#x27;http://i.imgur.com/J9yDWph.png&#x27; style=&#x27;display: inline; margin: 0&#x27; /&gt; to be here now. Here is how you can setup a blog (hosted by &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;) and update it by sending a message in &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Because I want the future of accomplishing &lt;em&gt;anything&lt;/em&gt; with &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/J9yDWph.png&quot; style=&quot;display: inline; margin: 0&quot;&gt; to be here now. Here is how you can setup a blog (hosted by &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;) and update it by sending a message in &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;pancake-io&quot;&gt;Pancake.io&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://pancake.io&quot;&gt;Pancake.io&lt;/a&gt; (definitely one of the cooler domains I&amp;#x2019;ve seen) allows you to host a blog with static Dropbox files. There are &lt;a href=&quot;http://webdesign.tutsplus.com/articles/7-dropbox-powered-site-creation-platforms--cms-21231&quot;&gt;some others&lt;/a&gt; out there, but this one is free and only takes two minutes to setup.&lt;/p&gt;
&lt;p&gt;Register, create a new project, and authenticate your Dropbox account. Pancake will then create a new directory in your Dropbox, &lt;code&gt;/App/Pancake.io&lt;/code&gt;, with some default files. Note that this is where you would put new files for your blog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/hrk3GCk.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can check out your beautiful creation immediately, as well. Just point your browser to the customizable subdomain Pancake provides you:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1s4fRRL.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Voila! Now you can&amp;#x2019;t say that you didn&amp;#x2019;t do something today. Good on you.&lt;/p&gt;
&lt;h2 id=&quot;zapier&quot;&gt;Zapier&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zapier.com&quot;&gt;Zapier&lt;/a&gt;, a personal favorite, let&amp;#x2019;s you tie together all sorts of web services to make &lt;a href=&quot;https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=best%20zaps&quot;&gt;some pretty nifty things&lt;/a&gt;. Let&amp;#x2019;s setup Zapier so that every new message in a Slack channel will be saved to the &lt;code&gt;/App/Pancake.io&lt;/code&gt; directory in Dropbox.&lt;/p&gt;
&lt;p&gt;These steps are pretty self-explanatory:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/xdbpK7s.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;For the Slack filter, I decided to create a new channel called &lt;code&gt;#blog&lt;/code&gt; (totally up to you, you are the captain of your own ship):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qiVLYE9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Finally, for each new message in Slack that match the previous filter, tell Zapier to create a file in the right directory with the right information. I chose to use &lt;code&gt;timestamp&lt;/code&gt; as the filename, but again, up to you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/v4pF1ua.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then, save and enable!&lt;/p&gt;
&lt;h2 id=&quot;blog&quot;&gt;Blog&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://andy-slack.pancakeapps.com/1439137541.000007.txt&quot;&gt;Here&lt;/a&gt; is &lt;em&gt;this&lt;/em&gt; post published via Slack to my Pancake blog (yes, I did just send this entire markdown file as a single message in &lt;code&gt;#blog&lt;/code&gt;)!&lt;/p&gt;
&lt;p&gt;A few words of warning about this egregiously stitched together hack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pancake doesn&amp;#x2019;t easily provide you with an archive of existing blog posts from your blog&amp;#x2019;s home page. You would need to explicitly link your blog posts together like a 1999 &lt;a href=&quot;https://en.wikipedia.org/wiki/Webring&quot;&gt;web ring&lt;/a&gt;. On a positive note, this could be an opportunity to be ahead of the curve when these regain popularity.&lt;/li&gt;
&lt;li&gt;You&amp;#x2019;re unable to edit the blog post-publish via Slack. Sorry everyone, I&amp;#x2019;m just a dude who likes to surf the inter webs, not some magician.&lt;/li&gt;
&lt;li&gt;Looks like Pancake hasn&amp;#x2019;t tweeted since 2014 (&lt;a href=&quot;https://twitter.com/pancakeio/status/464428572250107904&quot;&gt;most recent tweet&lt;/a&gt;). Let&amp;#x2019;s hope they&amp;#x2019;re just heads down cooking up something awesome!!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are able to find work arounds to either of the above points, please let me know!&lt;/p&gt;
&lt;p&gt;Hope you found this useless and distracting! And if you&amp;#x2019;re not having fun, then you&amp;#x2019;re not doing it right!!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Reading Position Horizontal Progress Bar</title>
    <link href="http://blog.andyjiang.com/reading-position-horizontal-progress-bar"/>
    <id>http://blog.andyjiang.com/reading-position-horizontal-progress-bar</id>
    <updated>2015-08-07T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;I’ve seen this in &lt;a href=&quot;http://firstround.com/review/how-dropbox-sources-scales-and-ships-its-best-product-ideas/&quot;&gt;some of the articles&lt;/a&gt; on the Internet—a subtle, horizontal bar at the top of the window that fills up as you scroll down, indicating how far you’ve read. I came across &lt;a href=&quot;http://stackoverflow.com/questions/19700020/change-progress-bar-value-based-on-scrolling&quot;&gt;this solution&lt;/a&gt; that uses jQuery, but wanted to write one using vanilla JavaScript. Here is the code!&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;I&amp;#x2019;ve seen this in &lt;a href=&quot;http://firstround.com/review/how-dropbox-sources-scales-and-ships-its-best-product-ideas/&quot;&gt;some of the articles&lt;/a&gt; on the Internet&amp;#x2014;a subtle, horizontal bar at the top of the window that fills up as you scroll down, indicating how far you&amp;#x2019;ve read. I came across &lt;a href=&quot;http://stackoverflow.com/questions/19700020/change-progress-bar-value-based-on-scrolling&quot;&gt;this solution&lt;/a&gt; that uses jQuery, but wanted to write one using vanilla JavaScript. Here is the code!&lt;/p&gt;
&lt;p&gt;You can check out a live demo right on this site. Scroll down and check out the horizontal progress bar at the top of the window!&lt;/p&gt;
&lt;p&gt;The HTML is a &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;width&lt;/code&gt; at &lt;code&gt;100%&lt;/code&gt; and a &lt;code&gt;span&lt;/code&gt; inside with variable &lt;code&gt;width&lt;/code&gt;. Both the &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;span&lt;/code&gt; will be fixed at the top and will have heights of &lt;code&gt;2px&lt;/code&gt;. Here is the HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-html&quot;&gt;&amp;lt;div id=&amp;quot;Reading-progress&amp;quot;&amp;gt;
  &amp;lt;span id=&amp;quot;Progress-bar&amp;quot; class=&amp;quot;bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the styling below. Note that the position is &lt;code&gt;fixed&lt;/code&gt; at &lt;code&gt;top: 0px&lt;/code&gt; and &lt;code&gt;left: 0px&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-css&quot;&gt;#Reading-progress {
  position: fixed;
  top: 0px;
  width: 100%;
  height: 2px;
  margin: 0px;
  left: 0px;
  z-index: 99;
}

.bar {
  height: 2px;
  background: #5CCC5C;
  position: fixed;
  top: 0px;
  z-index: 99;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JavaScript attaches a &lt;code&gt;scroll&lt;/code&gt; event to the &lt;code&gt;window&lt;/code&gt;, calculates the scroll percentage, and updates the &lt;code&gt;width&lt;/code&gt; of the &lt;code&gt;span&lt;/code&gt; via &lt;code&gt;setAttribute()&lt;/code&gt;. Note that using &lt;code&gt;setAttribute()&lt;/code&gt; for &lt;code&gt;style&lt;/code&gt; will replace all other &lt;code&gt;style&lt;/code&gt;s on the element, which is why we separate the class &lt;code&gt;bar&lt;/code&gt; from the id &lt;code&gt;Progress-bar&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;window.addEventListener(&amp;apos;scroll&amp;apos;, function(e) {
  var s = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
  var body = document.body;
  var html = document.documentElement;
  var d = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
  var c = window.innerHeight;
  var position = (s / (d - c)) * 100;
  document.getElementById(&amp;apos;Progress-bar&amp;apos;).setAttribute(&amp;apos;style&amp;apos;, &amp;apos;width: &amp;apos; + position + &amp;apos;%&amp;apos;);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&quot;Reading-progress&quot;&gt;
  &lt;span id=&quot;Progress-bar&quot; class=&quot;bar&quot;&gt;&lt;/span&gt;
&lt;/div&gt;

&lt;style&gt;
#Reading-progress {
  position: fixed;
  top: 0px;
  width: 100%;
  height: 2px;
  margin: 0px;
  left: 0px;
  z-index: 99;
}

.bar {
  height: 2px;
  background: #5CCC5C;
  position: fixed;
  top: 0px;
  z-index: 99;
}
&lt;/style&gt;

&lt;script&gt;
window.addEventListener(&#x27;scroll&#x27;, function(e) {
  var s = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
  var body = document.body;
  var html = document.documentElement;
  var d = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
  var c = window.innerHeight;
  var position = (s / (d - c)) * 100;
  document.getElementById(&#x27;Progress-bar&#x27;).setAttribute(&#x27;style&#x27;, &#x27;width: &#x27; + position + &#x27;%&#x27;);
});
&lt;/script&gt;</content>
  </entry>
  <entry>
    <title>⚡️ EmojiPacks 🎒 : Bulk Uploading 🌟Emojis🌟 into Slack</title>
    <link href="http://blog.andyjiang.com/emojipacks-bulk-uploading-emojis-into-slack"/>
    <id>http://blog.andyjiang.com/emojipacks-bulk-uploading-emojis-into-slack</id>
    <updated>2015-07-24T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;We can all indisputably agree on that the three best things on 🌎 are warm blankets, emojis, and &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;. And when I discovered that I could add my own custom &lt;img width=22px src=&#x27;http://i.imgur.com/o7tyjxN.gif&#x27; style=&#x27;display: inline; margin: 0&#x27; /&gt;, &lt;img width=22px src=&#x27;http://i.imgur.com/8lLklPJ.gif&#x27; style=&#x27;display: inline; margin: 0&#x27; /&gt;, and &lt;img width=22px src=&#x27;http://i.imgur.com/GmcaGmz.gif&#x27; style=&#x27;display: inline; margin: 0&#x27; /&gt; to &lt;img width=22px src=&#x27;http://i.imgur.com/J9yDWph.png&#x27; style=&#x27;display: inline; margin: 0&#x27; /&gt;, it was arguably one of the 🎉 😍 moments of my short-lived life (barely exceeding a close number two, when I discovered &lt;a href=&quot;http://www.cafepress.com/+emojis_throw_blanket,1608034030&quot;&gt;this warm blanket&lt;/a&gt;). So I built &lt;a href=&quot;https://www.github.com/lambtron/emojipacks&quot;&gt;emojipacks&lt;/a&gt;, a command line interface, to bulk upload emojis into Slack. Let’s take a 👀 at the code that accomplishes this ✨🌟✨🌟 feat.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;We can all indisputably agree on that the three best things on &amp;#x1F30E; are warm blankets, emojis, and &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;. And when I discovered that I could add my own custom &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/o7tyjxN.gif&quot; style=&quot;display: inline; margin: 0&quot;&gt;, &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/8lLklPJ.gif&quot; style=&quot;display: inline; margin: 0&quot;&gt;, and &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/GmcaGmz.gif&quot; style=&quot;display: inline; margin: 0&quot;&gt; to &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/J9yDWph.png&quot; style=&quot;display: inline; margin: 0&quot;&gt;, it was arguably one of the &amp;#x1F389; &amp;#x1F60D; moments of my short-lived life (barely exceeding a close number two, when I discovered &lt;a href=&quot;http://www.cafepress.com/+emojis_throw_blanket,1608034030&quot;&gt;this warm blanket&lt;/a&gt;). So I built &lt;a href=&quot;https://www.github.com/lambtron/emojipacks&quot;&gt;emojipacks&lt;/a&gt;, a command line interface, to bulk upload emojis into Slack. Let&amp;#x2019;s take a &amp;#x1F440; at the code that accomplishes this &amp;#x2728;&amp;#x1F31F;&amp;#x2728;&amp;#x1F31F; feat.&lt;/p&gt;
&lt;h2 id=&quot;-the-beginning&quot;&gt;&amp;#x1F476; The Beginning&lt;/h2&gt;
&lt;p&gt;Shortly after I discovered the ability to add custom emojis in Slack, I was hooked like a &amp;#x1F41F; . I &amp;#x1F369; even remember taking a break until the first &amp;#x1F4AF; &lt;img height=&quot;22px&quot; src=&quot;http://i.imgur.com/yrd45Ky.gif&quot; style=&quot;display: inline; margin: 0&quot;&gt; emojis were added. But &amp;#x1F6A2; emoji after emoji inevitably ate away at my entire day at work. Though I managed to enter a rhythm of &amp;#x1F526; for emojis and then uploading them all at once, it still took a long &amp;#x231A;&amp;#xFE0F;. I had to &amp;#x1F6A7; off &amp;#x231B; &amp;#xFE0F;on my &amp;#x1F4C5; just so I was able to have uninterrupted time dedicated to uploading emojis. Not the most glamorous of jobs, but somebody had to do it &amp;#x1F64C; &amp;#x1F4AA; .&lt;/p&gt;
&lt;p&gt;Knowing that &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/J9yDWph.png&quot; style=&quot;display: inline; margin: 0&quot;&gt; is active on &lt;img width=&quot;22px&quot; src=&quot;http://i.imgur.com/Y8DaHZx.png&quot; style=&quot;display: inline; margin: 0&quot;&gt; (they even have a &lt;a href=&quot;https://twitter.com/slacklovetweets&quot;&gt;@SlackLovesTweets&lt;/a&gt; account that just RT&amp;#x2019;s awesome tweets), I decided to &amp;#x1F680; this tweet to &lt;a href=&quot;https://www.twitter.com/slack&quot;&gt;@Slack&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/SlackHQ&quot;&gt;@SlackHQ&lt;/a&gt; Hi! We use slack here and love it. Just wondering if you thought about a way to bulk import custom emoticons? :)&lt;/p&gt;&amp;#x2014; Andy Jiang (@andyjiang) &lt;a href=&quot;https://twitter.com/andyjiang/status/542789755293814784&quot;&gt;December 10, 2014&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;They gave me a &amp;#x1F4AC;, but with &amp;#x1F4A9; &amp;#x1F61E; &amp;#x1F4F0;:&lt;/p&gt;
&lt;p&gt;&lt;blockquote data-conversation=&quot;none&quot; class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/andyjiang&quot;&gt;@andyjiang&lt;/a&gt; No way to bulk import emoticons right now but we&amp;apos;ll share the idea with the team! &amp;#x1F4EE;&lt;/p&gt;&amp;#x2014; Slack (@SlackHQ) &lt;a href=&quot;https://twitter.com/SlackHQ/status/543006206521262080&quot;&gt;December 11, 2014&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;So they have a &amp;#x1F454;&amp;#x1F4BC; to &amp;#x1F3C3; and maybe there are way more important things on their product road map &amp;#x1F64A;. &lt;em&gt;Maybe.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Fortunately for me, the Internet is made of a series of tubes, so there is definitely a way to hack together a solution to accomplish this.&lt;/p&gt;
&lt;h2 id=&quot;-emoji-packs&quot;&gt;&amp;#x1F4A5; Emoji Packs&lt;/h2&gt;
&lt;p&gt;A few, long &amp;#x1F311; &amp;#x1F313; &amp;#x1F315; &amp;#x1F317; &amp;#x1F31A; of &amp;#x270B; uploading one-off emojis pass. Until one &amp;#x1F31E;, I came across &lt;a href=&quot;https://github.com/mootcycle/slackporter&quot;&gt;this awesome project&lt;/a&gt; on &lt;a href=&quot;https://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt; and was reinspired to &amp;#x1F528;&amp;#x1F527; something to bulk upload emojis.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mootcycle/slackporter&quot;&gt;Slackporter&lt;/a&gt; allows you to transfer emojis from one Slack account to another. Super neat. Plus the &lt;a href=&quot;https://twitter.com/mootcycle&quot;&gt;developer&lt;/a&gt; is responsive on Twitter (super nice guy, too)!&lt;/p&gt;
&lt;p&gt;I decided to re-use these &amp;#x1F511; pieces: &amp;#x270A; the user login information, logging in, and submitting the emoji form. I also re-wrote it with &lt;a href=&quot;http://koajs.com/&quot;&gt;Koa&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;generators&lt;/a&gt;. The result is &lt;a href=&quot;https://www.github.com/lambtron/emojipacks&quot;&gt;emojipacks&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;-how-this-works&quot;&gt;&amp;#x1F529; How this works&lt;/h2&gt;
&lt;p&gt;The script uses &lt;a href=&quot;https://github.com/cheeriojs/cheerio&quot;&gt;Cheerio&lt;/a&gt; for server-side HTML parsing and manipulation and &lt;a href=&quot;https://github.com/request/request&quot;&gt;Request&lt;/a&gt; to submit form requests.&lt;/p&gt;
&lt;p&gt;The first step is to get to this &amp;#x1F4BB;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/qUVR6Ko.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then, the script grabs some &amp;#x1F47B; form data, such as the sign in value, redirect path, and a unique session crumb. This &amp;#x1F52E; is used later to log into Slack.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cldup.com/BO7qWgzUcF.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;With the form data, we can login to Slack:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/AV9Wj5u.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that this won&amp;#x2019;t ever load, since it is a static HTML file.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After doing so, we can go to the emoji upload page:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/5rFpsVM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here, we grab an upload crumb from an input field. We&amp;#x2019;ll use this crumb when programmatically submitting the form submit request.&lt;/p&gt;
&lt;h2 id=&quot;-debugging&quot;&gt;&amp;#x1F50D; Debugging&lt;/h2&gt;
&lt;p&gt;To help me understand which HTML page the script was on, I &amp;#x1F4DD; the Cheerio-generated HTML to &lt;code&gt;&amp;apos;./test/&amp;lt;title&amp;gt;.html&amp;apos;&lt;/code&gt; files. Then I could open it up and see where I ended up in the upload emoji flow.&lt;/p&gt;
&lt;p&gt;For example, I would get the HTML on the server, parse it with Cheerio, then &amp;#xFE0F;&amp;#x1F4BE; it to a &amp;#x1F3E1; &amp;#x1F4C1;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var res = yield request(load);
var $ = cheerio.load(res[0].body);
write($(&amp;apos;title&amp;apos;).text(), $.html());
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function &lt;code&gt;write&lt;/code&gt; is defined as:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;function(title, html) {
  var test = resolve(__dirname, &amp;apos;../test/&amp;apos; + title + &amp;apos;.html&amp;apos;);
  fs.writeFileSync(test, html);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After &amp;#x1F3C3; the script, I can go into the &lt;code&gt;./test&lt;/code&gt; directory, use this nifty dotfile command &lt;code&gt;server&lt;/code&gt;* to spin up a local server in that directory, and check it out with my browser.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;  &amp;#x1F349; &amp;#x1F349; &amp;#x1F349;  emojipacks-cli (master): cd test
  &amp;#x1F349; &amp;#x1F349; &amp;#x1F349;  test (master): server
Serving HTTP on 0.0.0.0 port 4000 ...
127.0.0.1 - - [25/Jul/2015 08:26:38] &amp;quot;GET / HTTP/1.1&amp;quot; 200 -
127.0.0.1 - - [25/Jul/2015 08:26:40] &amp;quot;GET /Slack.html HTTP/1.1&amp;quot; 200 -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can browse to see where the script was able to navigate.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/utp1BQ3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;*The super convenient &lt;code&gt;server&lt;/code&gt; command is taken from my mate Anthony&amp;#x2019;s &lt;a href=&quot;https://github.com/anthonyshort/dotfiles/blob/master/bash/functions&quot;&gt;dotfiles&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;-next&quot;&gt;&amp;#x1F680; Next&lt;/h2&gt;
&lt;p&gt;So there you have it. The only thing next is to make more emoji &amp;#x1F4E6;&amp;#x1F381; and try to find the upper limit in the number of custom emojis you can have in Slack.&lt;/p&gt;
&lt;p&gt;&amp;#x1F30A; you doing today? If you would like to contribute, please &lt;a href=&quot;https://20p.typeform.com/to/xOFDyq&quot;&gt;suggest an emoji pack&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.github.com/lambtron/emojipacks&quot;&gt;Source&lt;/a&gt;. &lt;a href=&quot;https://www.emojipacks.com&quot;&gt;Demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Metalsmith-Hover: A Plugin to Show Gifs on Hover</title>
    <link href="http://blog.andyjiang.com/metalsmith-hover-plugin-to-show-gifs"/>
    <id>http://blog.andyjiang.com/metalsmith-hover-plugin-to-show-gifs</id>
    <updated>2015-07-14T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;I have some &lt;a href=&quot;http://media.giphy.com/media/s7PYWohoEXPCo/giphy.gif&quot;&gt;exciting news&lt;/a&gt; to share—not only did I write my first &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith&lt;/a&gt; plugin, but also it’s live on my blog! &lt;a href=&quot;http://www.reactiongifs.com/r/dnc.gif&quot;&gt;Wewt&lt;/a&gt;! I’ll discuss how I went about doing so in this &lt;a href=&quot;http://i.imgur.com/hRxquuu.jpg&quot;&gt;post&lt;/a&gt;, so come for the &lt;a href=&quot;https://38.media.tumblr.com/cb6da16d6949f8fc6a363b40538f7e49/tumblr_inline_nctv9c7ODq1sv49sn.gif&quot;&gt;arguably trivial insights&lt;/a&gt; and stay for the &lt;a href=&quot;http://replygif.net/i/343.gif&quot;&gt;mediocre&lt;/a&gt; &lt;a href=&quot;http://i.imgur.com/KpuscdT.gif&quot;&gt;gifs&lt;/a&gt;!&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;I have some &lt;a href=&quot;http://media.giphy.com/media/s7PYWohoEXPCo/giphy.gif&quot;&gt;exciting news&lt;img src=&quot;http://media.giphy.com/media/s7PYWohoEXPCo/giphy.gif&quot;&gt;&lt;/a&gt; to share&amp;#x2014;not only did I write my first &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith&lt;/a&gt; plugin, but also it&amp;#x2019;s live on my blog! &lt;a href=&quot;http://www.reactiongifs.com/r/dnc.gif&quot;&gt;Wewt&lt;img src=&quot;http://www.reactiongifs.com/r/dnc.gif&quot;&gt;&lt;/a&gt;! I&amp;#x2019;ll discuss how I went about doing so in this &lt;a href=&quot;http://i.imgur.com/hRxquuu.jpg&quot;&gt;post&lt;img src=&quot;http://i.imgur.com/hRxquuu.jpg&quot;&gt;&lt;/a&gt;, so come for the &lt;a href=&quot;https://38.media.tumblr.com/cb6da16d6949f8fc6a363b40538f7e49/tumblr_inline_nctv9c7ODq1sv49sn.gif&quot;&gt;arguably trivial insights&lt;img src=&quot;https://38.media.tumblr.com/cb6da16d6949f8fc6a363b40538f7e49/tumblr_inline_nctv9c7ODq1sv49sn.gif&quot;&gt;&lt;/a&gt; and stay for the &lt;a href=&quot;http://replygif.net/i/343.gif&quot;&gt;mediocre&lt;img src=&quot;http://replygif.net/i/343.gif&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://i.imgur.com/KpuscdT.gif&quot;&gt;gifs&lt;img src=&quot;http://i.imgur.com/KpuscdT.gif&quot;&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Inspired by such Chrome extensions such as &lt;a href=&quot;https://chrome.google.com/webstore/detail/hover-zoom/nonjdcjchghhkdoolnlbekcfllmednbl?hl=en&quot;&gt;Hover Zoom&lt;/a&gt;, &lt;a href=&quot;https://chrome.google.com/webstore/detail/ezlinkpreview/nnkcfbiefgdaceeplickkkmifpicbpcc?hl=en&quot;&gt;ezLinkPreview&lt;/a&gt;, &lt;a href=&quot;https://chrome.google.com/webstore/detail/hover-link/ggbpdjpocpnohglmhmppdkimpoiklegb?hl=en-US&quot;&gt;Hover Link&lt;/a&gt;, &lt;a href=&quot;https://chrome.google.com/webstore/detail/link-previews/hlbhbhdjmllabhmeoehogilodnpbmhgj?hl=en&quot;&gt;Link Previews&lt;/a&gt;, &lt;a href=&quot;https://chrome.google.com/webstore/detail/hover-free/hcmnnggnaofmhflgomfjfbndngdoogkj?hl=en&quot;&gt;Hover Free&lt;/a&gt;, and &lt;a href=&quot;https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=chrome%20extension%20hover%20link&quot;&gt;hundreds more&lt;/a&gt;&amp;#x2014;tools to drive all productivity on the Internet to a &lt;a href=&quot;http://33.media.tumblr.com/8b0e3cbcfc4bdfbdad8320584128340c/tumblr_mmoodrLNAb1spes4io1_500.gif&quot;&gt;mind numbingly infinite scroll&lt;img src=&quot;http://33.media.tumblr.com/8b0e3cbcfc4bdfbdad8320584128340c/tumblr_mmoodrLNAb1spes4io1_500.gif&quot;&gt;&lt;/a&gt; fest of &lt;a href=&quot;http://i.imgur.com/pz1C9fb.jpg&quot;&gt;cat&lt;img src=&quot;http://i.imgur.com/pz1C9fb.jpg&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://38.media.tumblr.com/9ec0aeed0ef6f914d0daa05beb641648/tumblr_ndp649VVhG1s60v4go1_500.gif&quot;&gt;gifs&lt;img src=&quot;https://38.media.tumblr.com/9ec0aeed0ef6f914d0daa05beb641648/tumblr_ndp649VVhG1s60v4go1_500.gif&quot;&gt;&lt;/a&gt;&amp;#x2014;I decided to &lt;a href=&quot;http://media.giphy.com/media/GT9BB2Zm4VnI4/giphy.gif&quot;&gt;half-bake&lt;img src=&quot;http://media.giphy.com/media/GT9BB2Zm4VnI4/giphy.gif&quot;&gt;&lt;/a&gt; that right into my blog. Doing so would serve &lt;a href=&quot;http://i.imgur.com/SBduuXe.jpg&quot;&gt;two purpoises&lt;img src=&quot;http://i.imgur.com/SBduuXe.jpg&quot;&gt;&lt;/a&gt;: 1) allow me to further &lt;a href=&quot;http://media.giphy.com/media/xT7aLRxSYZkk0/giphy.gif&quot;&gt;feed&lt;img src=&quot;http://media.giphy.com/media/xT7aLRxSYZkk0/giphy.gif&quot;&gt;&lt;/a&gt; my &lt;a href=&quot;http://media.giphy.com/media/4zwwZI3aSZgAg/giphy.gif&quot;&gt;gif addiction&lt;img src=&quot;http://media.giphy.com/media/4zwwZI3aSZgAg/giphy.gif&quot;&gt;&lt;/a&gt;, and 2) spread my &lt;a href=&quot;http://i.imgur.com/QTvZAIO.gif&quot;&gt;love of gifs&lt;img src=&quot;http://i.imgur.com/QTvZAIO.gif&quot;&gt;&lt;/a&gt; to my handful of &lt;a href=&quot;http://media.giphy.com/media/tpdtC6yLhvhgA/giphy.gif&quot;&gt;devoted readers&lt;img src=&quot;http://media.giphy.com/media/tpdtC6yLhvhgA/giphy.gif&quot;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This blog is built with &lt;a href=&quot;http://i.imgur.com/liYrWZw.jpg&quot;&gt;Plato&lt;img src=&quot;http://i.imgur.com/liYrWZw.jpg&quot;&gt;&lt;/a&gt; (a currently closed source &lt;a href=&quot;https://www.segment.com/&quot;&gt;Segment&lt;/a&gt; project), which converts markdown files into a static site using &lt;a href=&quot;https://www.metalsmith.io&quot;&gt;Metalsmith&lt;/a&gt; (another Segment project, but this one is open source!). Plato uses various Metalsmith plugins, so I knew that in order to add this hover link ability, I would first need to write a plugin for Metalsmith and then add that to &lt;a href=&quot;http://i.imgur.com/QWfiTHO.jpg&quot;&gt;Plato&lt;img src=&quot;http://i.imgur.com/QWfiTHO.jpg&quot;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;building-building-blocks-to-build-more-building-blocks&quot;&gt;Building Building Blocks To Build More Building Blocks&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A plug-in is a software component that adds a specific feature to an existing software application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Metalsmith itself is really just an abstraction for &lt;a href=&quot;http://media.giphy.com/media/EreFiaDJ9zK6Y/giphy.gif&quot;&gt;transforming&lt;img src=&quot;http://media.giphy.com/media/EreFiaDJ9zK6Y/giphy.gif&quot;&gt;&lt;/a&gt; a directory of files. It takes a set of &lt;a href=&quot;http://i.imgur.com/pMF6W7y.gif&quot;&gt;files&lt;img src=&quot;http://i.imgur.com/pMF6W7y.gif&quot;&gt;&lt;/a&gt; in the source directory, &lt;a href=&quot;http://i.imgur.com/lgCDCa0.gif&quot;&gt;manipulates each of them&lt;img src=&quot;http://i.imgur.com/lgCDCa0.gif&quot;&gt;&lt;/a&gt; with the plugins, and then &lt;a href=&quot;http://media.giphy.com/media/AWicoNvwT3xAI/giphy.gif&quot;&gt;outputs the files&lt;img src=&quot;http://media.giphy.com/media/AWicoNvwT3xAI/giphy.gif&quot;&gt;&lt;/a&gt; in the destination directory. It is the rich ecosystem of these plugins that make Metalsmith as powerful as it is.&lt;/p&gt;
&lt;p&gt;There are plugins for &lt;a href=&quot;https://www.github.com/segmentio/metalsmith-markdown&quot;&gt;converting Markdown to HTML&lt;/a&gt;, &lt;a href=&quot;https://github.com/boushley/metalsmith-beautify&quot;&gt;formatting your HTML, CSS, or JS files&lt;/a&gt;, &lt;a href=&quot;https://github.com/segmentio/metalsmith-templates&quot;&gt;rendering any file through a templating engine of your choice&lt;/a&gt;, &lt;a href=&quot;http://www.metalsmith.io/#the-plugins&quot;&gt;etc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And not surprisingly, this is certainly inline with &lt;a href=&quot;https://segment.com/blog/building-building-blocks/&quot;&gt;Segment&amp;#x2019;s approach&lt;/a&gt; to building software in &lt;a href=&quot;http://i.imgur.com/Kh2Osoy.gif&quot;&gt;modular, pluggable components&lt;img src=&quot;http://i.imgur.com/Kh2Osoy.gif&quot;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-happened-next-will-make-you-continue-to-sit-or-stand-there&quot;&gt;What Happened Next Will Make You Continue To Sit (or Stand) There&lt;/h2&gt;
&lt;p&gt;This is my first Metalsmith plugin! Basically, this plugin would&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;take an HTML file&lt;/li&gt;
&lt;li&gt;find all anchor tags where the &lt;code&gt;href&lt;/code&gt; were images&lt;/li&gt;
&lt;li&gt;append a hidden &lt;code&gt;img&lt;/code&gt; tag that would reveal itself upon hover&lt;/li&gt;
&lt;li&gt;prepend the necessary CSS to attach style to the &lt;code&gt;a:hover&lt;/code&gt; pseudo class&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I decided to use &lt;a href=&quot;https://github.com/cheeriojs/cheerio&quot;&gt;Cheerio&lt;/a&gt; for HTML/&lt;a href=&quot;http://i.imgur.com/i9qbCIX.png&quot;&gt;DOM&lt;img src=&quot;http://i.imgur.com/i9qbCIX.png&quot;&gt;&lt;/a&gt; querying, just because I am most familiar with its API (I&amp;#x2019;ve used it in previous projects with &lt;a href=&quot;http://i.imgur.com/kpJspRB.png&quot;&gt;great success&lt;img src=&quot;http://i.imgur.com/kpJspRB.png&quot;&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https://github.com/lambtron/metalsmith-hover/blob/master/lib/index.js#L34-L44&quot;&gt;meat of the logic&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;function plugin() {
  return function(files, metalsmith, done) {
    Object.keys(files).forEach(function(file) {
      if (!~file.indexOf(&amp;apos;.html&amp;apos;)) return;
      var $ = cheerio.load(files[file].contents);
      var links = $(&amp;apos;a&amp;apos;);
      for (var i = links.length - 1; i &amp;gt;= 0; i--) {
        var url = links[i].attribs.href;
        if (image(url)) $(links[i]).append(img(url));
      }
      $.root().prepend(css());
      files[file].contents = new Buffer($.html());
    });
    done();
  };
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;I&amp;#x2019;m not 100% sure if this is the best way to do this, so if you have any suggestions, please don&amp;#x2019;t hesitate to add an issue &lt;a href=&quot;https://github.com/lambtron/metalsmith-hover/issues/new&quot;&gt;here&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One interesting thing to point out is that &lt;a href=&quot;http://stackoverflow.com/questions/1033156/how-to-write-ahover-in-inline-css&quot;&gt;you are not able to add inline styles to the &lt;code&gt;a:hover&lt;/code&gt; pseudo class&lt;/a&gt;. It is possible to use javascript and change the styles of the anchor element with &lt;code&gt;onMouseOver&lt;/code&gt; and &lt;code&gt;onMouseOut&lt;/code&gt; functions, but, for this &lt;a href=&quot;http://media.giphy.com/media/2aFRDAaACkSXu/giphy.gif&quot;&gt;wiener of a plugin&lt;img src=&quot;http://media.giphy.com/media/2aFRDAaACkSXu/giphy.gif&quot;&gt;&lt;/a&gt;, it seemed to be too much.&lt;/p&gt;
&lt;p&gt;Instead, I &lt;a href=&quot;https://github.com/lambtron/metalsmith-hover/blob/master/lib/index.js#L42&quot;&gt;prepended a &lt;code&gt;style&lt;/code&gt; element&lt;/a&gt; with &lt;a href=&quot;https://github.com/lambtron/metalsmith-hover/blob/master/lib/index.js#L71-L77&quot;&gt;the &lt;code&gt;a:hover&lt;/code&gt; css code&lt;/a&gt; to the root of the file&amp;#x2019;s HTML, which works. And yes, that is a &lt;a href=&quot;http://i.imgur.com/3R8DKRa.jpg&quot;&gt;&lt;code&gt;z-index: 99&lt;/code&gt;&lt;img src=&quot;http://i.imgur.com/3R8DKRa.jpg&quot;&gt;&lt;/a&gt; in my CSS code. Hey, I&amp;#x2019;ve made it this far in life so I must be doing something right, &lt;a href=&quot;http://media.giphy.com/media/Gvnh1m87wk2ek/giphy.gif&quot;&gt;right&lt;img src=&quot;http://media.giphy.com/media/Gvnh1m87wk2ek/giphy.gif&quot;&gt;&lt;/a&gt;? &lt;a href=&quot;http://media.giphy.com/media/NsJs9nmLwAxag/giphy.gif&quot;&gt;Right&lt;img src=&quot;http://media.giphy.com/media/NsJs9nmLwAxag/giphy.gif&quot;&gt;&lt;/a&gt;?!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://media.giphy.com/media/8ppnU9unXdula/giphy.gif&quot;&gt;Anyway&lt;img src=&quot;http://media.giphy.com/media/8ppnU9unXdula/giphy.gif&quot;&gt;&lt;/a&gt;, the &lt;a href=&quot;https://github.com/lambtron/metalsmith-hover&quot;&gt;plugin is now available&lt;/a&gt; for any brave soul to use. I only say that because, like &lt;em&gt;everything&lt;/em&gt; I release into the &lt;a href=&quot;http://33.media.tumblr.com/df06ab544c2cfddc6fad7242ca1a0fb0/tumblr_inline_nng15xQt631raprkq_500.gif&quot;&gt;unforgiving conditions of the wild&lt;img src=&quot;http://33.media.tumblr.com/df06ab544c2cfddc6fad7242ca1a0fb0/tumblr_inline_nng15xQt631raprkq_500.gif&quot;&gt;&lt;/a&gt;, it has &lt;a href=&quot;http://media.giphy.com/media/fhWTD7YCd59D2/giphy.gif&quot;&gt;no tests&lt;img src=&quot;http://media.giphy.com/media/fhWTD7YCd59D2/giphy.gif&quot;&gt;&lt;/a&gt; (but hey, &lt;a href=&quot;http://www.topito.com/wp-content/uploads/2013/01/code-08.gif&quot;&gt;it works!&lt;img src=&quot;http://www.topito.com/wp-content/uploads/2013/01/code-08.gif&quot;&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Install it like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;$ npm install metalsmith-hover
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And use it like (assuming the source directory has Markdown files, which I hope is true for all of you writers out there!):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var Metalsmith = require(&amp;apos;metalsmith&amp;apos;);
var markdown = require(&amp;apos;metalsmith-markdown&amp;apos;);
var hover = require(&amp;apos;metalsmith-hover&amp;apos;);

var metalsmith = Metalsmith(__dirname)
  .use(markdown())
  .use(hover())
  .build(function(err) {
    if (err) throw err;
  });
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gif-the-people-what-they-want&quot;&gt;Gif the People What They Want&lt;/h2&gt;
&lt;p&gt;Now that I have this great plugin, how do I get it onto this wonderful blog so that I can save you a click to view &lt;a href=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr01/21/11/anigif_enhanced-buzz-25559-1385050824-30.gif&quot;&gt;these&lt;img src=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr01/21/11/anigif_enhanced-buzz-25559-1385050824-30.gif&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr02/21/12/anigif_enhanced-buzz-25961-1385055442-5.gif&quot;&gt;awesome&lt;img src=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr02/21/12/anigif_enhanced-buzz-25961-1385055442-5.gif&quot;&gt;&lt;/a&gt; &lt;a href=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr03/21/11/anigif_enhanced-buzz-27147-1385051681-11.gif&quot;&gt;gifs&lt;img src=&quot;http://ak-hdl.buzzfed.com/static/2013-11/enhanced/webdr03/21/11/anigif_enhanced-buzz-27147-1385051681-11.gif&quot;&gt;&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Plato, which is used to turn a series of &lt;a href=&quot;http://media.giphy.com/media/1bWDLvRtlhgk0/giphy.gif&quot;&gt;poorly formed thoughts&lt;img src=&quot;http://media.giphy.com/media/1bWDLvRtlhgk0/giphy.gif&quot;&gt;&lt;/a&gt; hastily thrown into a collection of Markdown files into &lt;a href=&quot;https://github.com/lambtron/lambtron.github.io&quot;&gt;this&lt;/a&gt;, a beautiful static-site that is hosted on &lt;a href=&quot;https://www.github.com&quot;&gt;GitHub&lt;/a&gt;, has a &lt;code&gt;plugins.js&lt;/code&gt; file. This file is where you can add whatever Metalsmith plugin you would like.&lt;/p&gt;
&lt;p&gt;I added &lt;code&gt;metalsmith-hover&lt;/code&gt;, saved the blog, and &lt;a href=&quot;http://media.giphy.com/media/Lmhk4bVpRn4YM/giphy.gif&quot;&gt;deployed it&lt;img src=&quot;http://media.giphy.com/media/Lmhk4bVpRn4YM/giphy.gif&quot;&gt;&lt;/a&gt;. &lt;a href=&quot;http://i.imgur.com/kEgvj.gif&quot;&gt;Boom&lt;img src=&quot;http://i.imgur.com/kEgvj.gif&quot;&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;It&amp;#x2019;s all about the first rule of journalism: &lt;a href=&quot;http://i.imgur.com/Vca79Bt.gif&quot;&gt;give the people what they want&lt;img src=&quot;http://i.imgur.com/Vca79Bt.gif&quot;&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I hope you enjoyed this! &lt;a href=&quot;https://www.twitter.com/andyjiang&quot;&gt;Tweet at me&lt;/a&gt; if you have any &lt;a href=&quot;http://media.giphy.com/media/MJTOHmGiGPHgI/giphy.gif&quot;&gt;questions&lt;img src=&quot;http://media.giphy.com/media/MJTOHmGiGPHgI/giphy.gif&quot;&gt;&lt;/a&gt;, &lt;a href=&quot;http://media.giphy.com/media/Bt7yp8KpygqYg/giphy.gif&quot;&gt;comments&lt;img src=&quot;http://media.giphy.com/media/Bt7yp8KpygqYg/giphy.gif&quot;&gt;&lt;/a&gt;, or just &lt;a href=&quot;http://media.giphy.com/media/oGfEeawH6DrZ6/giphy.gif&quot;&gt;want to chat&lt;img src=&quot;http://media.giphy.com/media/oGfEeawH6DrZ6/giphy.gif&quot;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.andrewgoodricke.com/posts/2015-07-23_metalsmith_plugins.html&quot;&gt;Metalsmith Plugins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.krawaller.se/posts/creating-a-metalsmith-tag-plugin/&quot;&gt;Creating a Metalsmith Tag Plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>BottomOfProductHunt: A Look Into the &quot;Product Hunt&quot; Effect</title>
    <link href="http://blog.andyjiang.com/bottom-of-product-hunt-a-look-at-the-product-hunt-effect"/>
    <id>http://blog.andyjiang.com/bottom-of-product-hunt-a-look-at-the-product-hunt-effect</id>
    <updated>2015-07-12T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com&quot;&gt;Product Hunt&lt;/a&gt; has become the de facto way to launch and grow your business. I’ve recently had the unique opportunity to have something featured on Product Hunt. Let’s take a look at the traffic numbers behind the fabled “Product Hunt” effect.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com&quot;&gt;Product Hunt&lt;/a&gt; has become the de facto way to launch and grow your business. I&amp;#x2019;ve recently had the unique opportunity to have something featured on Product Hunt. Let&amp;#x2019;s take a look at the traffic numbers behind the fabled &amp;#x201C;Product Hunt&amp;#x201D; effect.&lt;/p&gt;
&lt;p&gt;On June 20th, 2015, I launched &lt;a href=&quot;http://www.producthunt.com/posts/bottom-of-product-hunt&quot;&gt;BottomOfProductHunt&lt;/a&gt; on Product Hunt.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.bottomofproducthunt.com&quot;&gt;BottomOfProductHunt&lt;/a&gt; is a single purpose, zero-value-add website that only shows posts on Product Hunt beneath a certain score. It was built as a fun side project, primarily to troll &lt;a href=&quot;https://twitter.com/dirtyanalytics&quot;&gt;my friend&lt;/a&gt;, who is the project&amp;#x2019;s inspiration and muse. As such, I had zero (arguably, negative) expectations about how this site would perform post-Product Hunt launch. Knowing the quirks of Silicon Valley, however, it also would not be out of the question if something like this ends up raising a round of financing, or whatever.&lt;/p&gt;
&lt;p&gt;Like any data-minded, analytics-driven troll, I wanted to measure &lt;em&gt;just&lt;/em&gt; the extent of my half-baked efforts. I added &lt;a href=&quot;https://www.segment.com&quot;&gt;Segment&lt;/a&gt;&amp;#x2018;s analytics.js snippet to the page and turned on &lt;a href=&quot;https://analytics.google.com&quot;&gt;Google Analytics&lt;/a&gt;. Since this was essentially a static site, I did not map out any &amp;#x201C;events&amp;#x201D; that I wanted to track, so the js snippet alone was enough to track page views.&lt;/p&gt;
&lt;h2 id=&quot;do-you-even-lift-bro-&quot;&gt;Do you even lift, bro?&lt;/h2&gt;
&lt;p&gt;Here is a screenshot of the Google Analytics session report. For those of you sane enough to not get into the analytics business, a &lt;a href=&quot;https://support.google.com/analytics/answer/2731565?hl=en&quot;&gt;&amp;#x201C;session&amp;#x201D;&lt;/a&gt; is defined as a group of interactions that take place on your website within a given time frame. In our special case, it just means someone looking at the website.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/yT1JvmC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The first day of being on Product Hunt gave it a whopping 403 sessions, which is 401 more sessions than expected (one from me and one from &lt;a href=&quot;https://twitter.com/dirtyanalytics&quot;&gt;@DirtyAnalytics&lt;/a&gt;). At an average duration session of 21 seconds, that is ~141 collective minutes of human kind that cannot be returned &lt;a href=&quot;http://media.giphy.com/media/rd4PovI7PgYw0/giphy.gif&quot;&gt;#sorrynotsorry&lt;img src=&quot;http://media.giphy.com/media/rd4PovI7PgYw0/giphy.gif&quot;&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, even after Product Hunt fanfare settled, I did not expect sustained traffic, or &amp;#x201C;lift&amp;#x201D;. There are still daily consistent 20-50 sessions on the site. Though I suspect this is largely from robots, I will certainly keep an eye on this for the next few months, before I begin putting together my pitch deck and approaching reputable VCs.&lt;/p&gt;
&lt;p&gt;Being the scrappy growth hacker that I am, I decided to move my mouse cursor further down in the Google Analytics interface and click on &amp;#x201C;Acquisition&amp;#x201D; to learn more about where all of this undeserved traffic came from.&lt;/p&gt;
&lt;h2 id=&quot;referrer-madness&quot;&gt;Referrer Madness&lt;/h2&gt;
&lt;p&gt;Here is a screenshot of the GA Acquisition &amp;gt; All Traffic &amp;gt; Source/Medium report.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/YiQmOYH.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Again, for those smart enough to avoid the analytics industry, a &amp;#x201C;referrer&amp;#x201D; is the URL of the previous webpage from which the link was followed. This is automatically done by HTTP requests (in the header), but used widely by analytics tools.&lt;/p&gt;
&lt;p&gt;Obviously, the largest bulk of the traffic came from &lt;a href=&quot;https://www.producthunt.com&quot;&gt;producthunt.com&lt;/a&gt; as a referrer. The second majority is &amp;#x201C;direct&amp;#x201D;, meaning that people visited the site directly in their browser, which actually means that they clicked on a link sent from other people, who have achieved the &amp;#x201C;a-ha&amp;#x201D; moment from being on the bottomofproducthunt.com site and wanted to share it to their closest enemies as a way to derail their unwavering focus with additional meaningless noise.&lt;/p&gt;
&lt;p&gt;All of the other referral sources are from the organic, human, certainly not robots &amp;#x201C;more-free-traffic&amp;#x201D; domains. It may be considered &lt;a href=&quot;https://forums.digitalpoint.com/threads/fake-referral-traffic.2750838/&quot;&gt;referral&lt;/a&gt; &lt;a href=&quot;http://viget.com/advance/removing-referral-spam-from-google-analytics&quot;&gt;spam&lt;/a&gt; to some, but it is this kind of mini affirmation that gets me out of bed in the mornings.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&quot;http://www.get-free-traffic-now.com/&quot;&gt;one&lt;/a&gt; is particularly amusing:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/K2E69zv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Another unusual one is actually &lt;a href=&quot;http://event-tracking.com/&quot;&gt;event-tracking.com&lt;/a&gt;. I thought it would be another robot one, but it actually is a guide to using Google Analytics analytics.js library to send events. Good on you for being helpful.&lt;/p&gt;
&lt;p&gt;Aside from the robots, I see a few &lt;a href=&quot;http://feedly.com/&quot;&gt;feedly&lt;/a&gt; users, &lt;a href=&quot;http://thenews.im/&quot;&gt;thenews.im&lt;/a&gt; users, &lt;a href=&quot;https://www.pulse.me/&quot;&gt;pulse.me&lt;/a&gt; users, &lt;a href=&quot;http://alltechnews.co/&quot;&gt;alltechnews.co&lt;/a&gt; users, and &lt;a href=&quot;http://losthunts.com/&quot;&gt;Lost Hunts&lt;/a&gt; users (Bottom of Product Hunt is pretty much a shittier, less-inspired clone of this one). Also a few referrers from Twitter (via this link, &lt;a href=&quot;http://t.co/kol9fbT9JJ&quot;&gt;http://t.co/kol9fbT9JJ&lt;/a&gt;; unfortunately, Twitter won&amp;#x2019;t show me what the original tweet is, but I&amp;#x2019;m guessing it&amp;#x2019;s &lt;a href=&quot;https://twitter.com/ProductHunt/status/612404808109174784&quot;&gt;this one&lt;/a&gt;). &lt;a href=&quot;http://media.giphy.com/media/kViTiGaoqD0gU/giphy.gif&quot;&gt;Yay, social&lt;img src=&quot;http://media.giphy.com/media/kViTiGaoqD0gU/giphy.gif&quot;&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Some domains I did not recognize are &lt;a href=&quot;http://revery.io/&quot;&gt;revery.io&lt;/a&gt; (&amp;#x201C;updates from all your favorite sites&amp;#x201D;, still in beta testing), &lt;a href=&quot;http://www.jianshu.com/&quot;&gt;jianshu.com&lt;/a&gt; (looks like a Chinese news aggregator), and &lt;a href=&quot;http://www.netvibes.com/en&quot;&gt;netvibes.com&lt;/a&gt; (&amp;#x201C;a dashboard for everything&amp;#x201D;, including probably news stories).&lt;/p&gt;
&lt;p&gt;There is also one poor soul who came to the site from a Google search. I wonder what stray Google query led to that?&lt;/p&gt;
&lt;h2 id=&quot;what-s-next-&quot;&gt;What&amp;#x2019;s next?&lt;/h2&gt;
&lt;p&gt;Probably nothing. Unless someone pokes me to do something about this site, it&amp;#x2019;ll most likely end up lost in some dark corner of the web, where it&amp;#x2019;ll find a highly devoted niche following in some random community. But I&amp;#x2019;ll continue to invest in renewing the domain, just in case some astute, enterprising person wants to acquire the consistent stream of valuable bot traffic.&lt;/p&gt;
&lt;p&gt;Hope this was useful for your Product Hunt launch!! If you have any questions or comments, please &lt;a href=&quot;https://www.twitter.com/andyjiang&quot;&gt;tweet me&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Here is a Twitter Profile Banner Template for Illustrator</title>
    <link href="http://blog.andyjiang.com/a-twitter-banner-template-for-illustrator"/>
    <id>http://blog.andyjiang.com/a-twitter-banner-template-for-illustrator</id>
    <updated>2015-06-21T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;If you have a &lt;a href=&quot;https://www.twitter.com&quot;&gt;Twitter&lt;/a&gt; account, &lt;a href=&quot;http://www.adobe.com/products/illustrator&quot;&gt;Adobe Illustrator&lt;/a&gt;, and have any desire to make a visually appealing Twitter profile banner, then this post is for you.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;If you have a &lt;a href=&quot;https://www.twitter.com&quot;&gt;Twitter&lt;/a&gt; account, &lt;a href=&quot;http://www.adobe.com/products/illustrator&quot;&gt;Adobe Illustrator&lt;/a&gt;, and have any desire to make a visually appealing Twitter profile banner, then this post is for you.&lt;/p&gt;
&lt;p&gt;This Illustrator template will provide you with the right dimensions for a Twitter banner (1500px by 421px). It&amp;#x2019;ll also provide you with basic layout for what you would expect to see once it is live on Twitter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.twelveskip.com/downloads/twitter-header-template-12skip.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here is one I just cooked up (Homerchu, I choose you!):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Q41wCqC.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;..and in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ka9NvIN.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can download it &lt;a href=&quot;https://www.dropbox.com/s/1bslbbpekwd69mq/TwitterBanner2015.ait?dl=0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Credit to &lt;a href=&quot;http://www.twelveskip.com/tutorials/twitter/1267/twitter-header-size-dimension-2014?ref=andyjiang&quot;&gt;Twelve Skip&lt;/a&gt; for the template image and &lt;a href=&quot;http://www.redbubble.com/people/thejesus?ref=andyjiang&quot;&gt;TheJesus&lt;/a&gt; for HomerChu.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How to Make a Random Text Snippet Generator in atext</title>
    <link href="http://blog.andyjiang.com/how-to-make-a-random-text-generator"/>
    <id>http://blog.andyjiang.com/how-to-make-a-random-text-generator</id>
    <updated>2015-06-07T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;If you’ve ever written into support at Segment, you’ve probably received an email from one of us with a whimsical “inspirational” quote appended to the end. But how do we keep the footer quotes different each time? We use a special script with &lt;a href=&quot;https://www.trankynam.com/atext/&quot;&gt;atext&lt;/a&gt; in order to keep the quotes random and fresh—here is how we do it!&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;If you&amp;#x2019;ve ever written into support at Segment, you&amp;#x2019;ve probably received an email from one of us with a whimsical &amp;#x201C;inspirational&amp;#x201D; quote appended to the end. But how do we keep the footer quotes different each time? We use a special script with &lt;a href=&quot;https://www.trankynam.com/atext/&quot;&gt;atext&lt;/a&gt; in order to keep the quotes random and fresh&amp;#x2014;here is how we do it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#x201C;If you can dream it, you can query it.&amp;#x201D;  &lt;/p&gt;
&lt;p&gt;   &lt;em&gt;Walt Disney&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;..and the response from one of our lovely customers:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/WyDSUES.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Just copy and paste the below script into your atext!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

# Keep this updated when you add or take away quotes on the case list
num_quotes=15

# Generate a random quote number variable, &amp;apos;rand&amp;apos;
rand=$[ ( $RANDOM % $num_quotes ) + 1 ]
case $rand in  #BEGIN CASE
        1) quote=&amp;quot;\&amp;quot;Our greatest weakness lies in giving up in identifying key performance metrics. The most certain way to succeed is always to try one more time.\&amp;quot;
    Thomas Edison&amp;quot;;;
        2) quote=&amp;quot;\&amp;quot;If you can dream it, you can query it.\&amp;quot;
    Walt Disney&amp;quot;;;
        3) quote=&amp;quot;\&amp;quot;You are never too old to set another goal, to dream a new dream, or to track your business growth with analytics.\&amp;quot;
    C.S. Lewis&amp;quot;;;
        4) quote=&amp;quot;\&amp;quot;Keep your eyes on the stars, your feet on the ground, and your customer acquisition cost lower than its lifetime value.\&amp;quot;
    Theodore Roosevelt&amp;quot;;;
        5) quote=&amp;quot;\&amp;quot;Great minds discuss business insights; average minds discuss KPIs; small minds discuss metrics.\&amp;quot;
    Eleanor Roosevelt&amp;quot;;;
        6) quote=&amp;quot;\&amp;quot;Good artists copy, great artists steal, best artists gain actionable insights from their data.\&amp;quot;
    Pablo Picasso&amp;quot;;;
        7) quote=&amp;quot;\&amp;quot;Success is walking from failure to failure with no loss of enthusiasm or data integrity.\&amp;quot;
    Winston Churchill&amp;quot;;;
        8) quote=&amp;quot;\&amp;quot;I have not failed. I&amp;apos;ve just found 10,000 KPIs that are meaningless.\&amp;quot;
    Thomas Edison&amp;quot;;;
        9) quote=&amp;quot;\&amp;quot;The starting point of all achievement is desire and adding funnel analytics to your website.\&amp;quot;
    Napoleon&amp;quot;;;
        10) quote=&amp;quot;\&amp;quot;I find that the harder I work and the better I optimize my conversion funnels, the more luck I seem to have.\&amp;quot;
    Thomas Jefferson&amp;quot;;;
        11) quote=&amp;quot;\&amp;quot;The successful warrior is the average man, with laser-like focus and empowering business intelligence reporting tools.\&amp;quot;
    Bruce Lee&amp;quot;;;
        12) quote=&amp;quot;\&amp;quot;You must expect great insights in your customer data before you can query them.\&amp;quot;
    Michael Jordan&amp;quot;;;
        13) quote=&amp;quot;\&amp;quot;You miss 100% of the your business and growth insights that you don&amp;apos;t query.\&amp;quot;
    Wayne Gretzky&amp;quot;;;
    14) quote=&amp;quot;\&amp;quot;Only you can prevent data loss.\&amp;quot;
    Smokey the Bear&amp;quot;;;
    15) quote=&amp;quot;\&amp;quot;Strength and conversion funnels are all that I am.\&amp;quot;
    Gandhi&amp;quot;;;
esac  # END CASE

# Display the random quote from case statement, and format it to line wrap at 80 characters
echo &amp;quot;Andy Jiang\n\nSegment | Growth Evangelist

$quote&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Segment Notifications in Slack via Zapier</title>
    <link href="http://blog.andyjiang.com/segment-notifications-in-slack-with-zapier"/>
    <id>http://blog.andyjiang.com/segment-notifications-in-slack-with-zapier</id>
    <updated>2015-06-06T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Yes, we all know that &lt;a href=&quot;https://www.slack.com/&quot;&gt;Slack&lt;/a&gt; is currently taking over the world. Those wise enough will understand that it is better to embrace our soon to be Overlords, instead of putting up futile resistance. This step-by-step post will show you how to receive real-time, easily digestible, customer event data in Slack with &lt;a href=&quot;https://www.segment.com&quot;&gt;Segment&lt;/a&gt; and &lt;a href=&quot;https://zapier.com&quot;&gt;Zapier&lt;/a&gt;.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Yes, we all know that &lt;a href=&quot;https://www.slack.com/&quot;&gt;Slack&lt;/a&gt; is currently taking over the world. Those wise enough will understand that it is better to embrace our soon to be Overlords, instead of putting up futile resistance. This step-by-step post will show you how to receive real-time, easily digestible, customer event data in Slack with &lt;a href=&quot;https://www.segment.com&quot;&gt;Segment&lt;/a&gt; and &lt;a href=&quot;https://zapier.com&quot;&gt;Zapier&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a &lt;a href=&quot;https://zapier.com/app/editor&quot;&gt;new Zap&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://i.imgur.com/hR802tz.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; First things first. Sign up for a &lt;a href=&quot;https://zapier.com/&quot;&gt;Zapier account&lt;/a&gt; (free 14-day trial) and head over to create a &lt;a href=&quot;https://zapier.com/app/editor&quot;&gt;new Zap&lt;/a&gt;. Then, set the trigger app to be &amp;#x2018;Webhook&amp;#x2019; and the action app to be &amp;#x2018;Slack&amp;#x2019;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take the webhook URL and paste it in your &lt;a href=&quot;https://www.segment.com&quot;&gt;Segment&lt;/a&gt; Webhooks integration&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://i.imgur.com/oXpmMta.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; After choosing Webhook in Zapier, it will provide you with a unique URL endpoint. Copy and paste that in Segment&amp;#x2019;s &lt;a href=&quot;https://www.segment.com/docs/integrations/webhooks&quot;&gt;Webhooks integration&lt;/a&gt;. Then select the Slack account you want to use for this Zap (it&amp;#x2019;ll auth you into Slack and let you select one).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set the filters for your Webhook triggers&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://i.imgur.com/XKR4Pi2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; The filters here will determine which events generated by Segment will be sent into your Slack channel. In the example screenshot above, I will only send Segment events where the event name contains &amp;#x201C;Signed Up&amp;#x201D; to Slack. There is an incredible degree of flexibility here, as you can create complex filters that will only post to your Slack channel if something happens that requires a human. Some useful ideas are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;event names in your conversion funnel (&amp;#x2018;Signed Up&amp;#x2019;, &amp;#x2018;Completed Order&amp;#x2019;, or other high value event)&lt;/li&gt;
&lt;li&gt;event names where your customer needs human attention (&amp;#x2018;Abandoned Cart&amp;#x2019;, &amp;#x2018;Submitted Talk-To-Sales Form&amp;#x2019;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select the Slack channel and format the message&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://i.imgur.com/mxlJM1I.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; Choose which channel to send it and format the message. In this section of creating the Zap, you can also modify the username, image, etc. of the Zap (how it would appear in the Slack channel). Once you are done here, you can test the Zap, and then turn it on!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get notified in Slack!&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://i.imgur.com/ttLwSXq.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; Boom! Again, you can make this integration as simple or as complex as you&amp;#x2019;d like. Zapier gives a fair bit of flexibility in the filtering of the triggers, which can be powerful for a team to stay on the pulse of the customers using its app.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And there you have it. Any suggestions, ideas, or comments, please let me know on &lt;a href=&quot;https://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ladder: Redefining Ping Pong at Segment</title>
    <link href="http://blog.andyjiang.com/ladder-redefining-ping-pong-at-segment"/>
    <id>http://blog.andyjiang.com/ladder-redefining-ping-pong-at-segment</id>
    <updated>2015-06-05T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;We take things very seriously here at Segment. But nothing is taken more seriously than our ping pong, which explains why we play on a non-Olympic regulation sized table (that sits snuggly above our junior-sized pool table), in addition to our sole use of &lt;a href=&quot;http://sports.stackexchange.com/questions/69/why-are-there-different-stars-on-table-tennis-balls&quot;&gt;one star balls&lt;/a&gt;. In fact, the Ping Pong culture at Segment is &lt;em&gt;so&lt;/em&gt; strong, we even have a dedicated Slack channel for it.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;We take things very seriously here at Segment. But nothing is taken more seriously than our ping pong, which explains why we play on a non-Olympic regulation sized table (that sits snuggly above our junior-sized pool table), in addition to our sole use of &lt;a href=&quot;http://sports.stackexchange.com/questions/69/why-are-there-different-stars-on-table-tennis-balls&quot;&gt;one star balls&lt;/a&gt;. In fact, the Ping Pong culture at Segment is &lt;em&gt;so&lt;/em&gt; strong, we even have a dedicated Slack channel for it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/fpXkYJ2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;But what fun is it to play Ping Pong with your co-worker without keeping track of everyone&amp;#x2019;s skill level, especially in a low-friction, asynchronous way? Being the resident Derp Engineer, I knew it was mostly on me to solve this in a manner most obtrusive and obnoxious&amp;#x2014;by writing an app.&lt;/p&gt;
&lt;h2 id=&quot;elo-rating-system&quot;&gt;Elo rating system&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://en.wikipedia.org/wiki/Elo_rating_system&quot;&gt;Elo rating system&lt;/a&gt; is a method for calculating the relative skill levels of players in head-to-head games such as chess. Currently, it has been adapted for use in many multiplayer video games and team sports, including football, basketball, baseball, competitive programming.&lt;/p&gt;
&lt;p&gt;The basic principle is that the difference between two players ratings will serve as a predictor of the outcome of the match (two players with the same rating will be seen by the Elo system as having equal chances of winning). The winner of the match will take a proportional number of points with regards to the predicted outcome from the loser, i.e. if the player with the higher Elo rating going into the match wins, then she will take fewer points from the loser; if the player with the lower Elo rating wins, then that player will take more points.&lt;/p&gt;
&lt;p&gt;I did a quick search on &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; (using the awesome &lt;a href=&quot;https://github.com/willfarrell/alfred-workflows&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;http://support.alfredapp.com/workflows&quot;&gt;Alfred workflow&lt;/a&gt; command) and came across this module, &lt;a href=&quot;https://www.npmjs.com/package/elo-rank/&quot;&gt;elo-rank&lt;/a&gt;, that takes two players starting ratings, the outcome of the match, and returns the new ratings (example below).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var elo = require(&amp;apos;elo-rank&amp;apos;);

var playerA = 1200;
var playerB = 1400;

//Gets expected score for first parameter 
var expectedScoreA = elo.getExpected(playerA, playerB);
var expectedScoreB = elo.getExpected(playerB, playerA);

//update score, 1 if won 0 if lost 
playerA = elo.updateRating(expectedScoreA, 1, playerA);
playerB = elo.updateRating(expectedScoreB, 0, playerB);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this library, I decided to put together a very simple app to maintain the ratings of our Ping Pong players at Segment.&lt;/p&gt;
&lt;h2 id=&quot;ladder-nodejs-mongodb-koa-deku&quot;&gt;Ladder: NodeJS, MongoDB, Koa, Deku&lt;/h2&gt;
&lt;p&gt;There is no better time than working on side projects to experiment with new technologies, so I decided to experiment with &lt;a href=&quot;https://www.segment.com&quot;&gt;Segment&lt;/a&gt;&amp;#x2018;s &lt;a href=&quot;https://www.github.com/dekujs/deku&quot;&gt;Deku&lt;/a&gt;, a functional alternative to &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;ReactJS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The front-end is just built with these &lt;a href=&quot;https://github.com/lambtron/ladder/tree/master/client/js&quot;&gt;components&lt;/a&gt;. &lt;strong&gt;A word of caution!&lt;/strong&gt; &lt;em&gt;This was built using &lt;code&gt;Deku v0.0.28&lt;/code&gt;, an early beta version; most recommended patterns are probably much different now. To see examples of Deku in action, go &lt;a href=&quot;https://github.com/stevenmiller888/awesome-deku&quot;&gt;here&lt;/a&gt;. To read about the thought process behind creating Deku, go &lt;a href=&quot;https://segment.com/blog/deku-our-functional-alternative-to-react/&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the server, I decided to use &lt;a href=&quot;https://github.com/koajs/koa&quot;&gt;Koa&lt;/a&gt; to set up a &lt;a href=&quot;https://github.com/lambtron/ladder/blob/master/server/lib/routes.js&quot;&gt;few routes&lt;/a&gt; to add and remove players, as well as submit game outcomes.&lt;/p&gt;
&lt;p&gt;And here is the finished product:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/wwtLBKV.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;pongbot&quot;&gt;PongBot&lt;/h3&gt;
&lt;p&gt;Being a Slack-forward organization, I decided to add some notifications to our beloved #pingpong channel with PongBot:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RqALb1F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;I setup PongBot with &lt;a href=&quot;https://addons.heroku.com/scheduler&quot;&gt;Heroku Scheduler&lt;/a&gt;, to send the top five in the ladder to Slack every morning at 9am. I updated the &lt;code&gt;Makefile&lt;/code&gt; to include the command with which Heroku Scheduler can kick off the request:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;
# Push to slack-ranking.
slack-ranking: node_modules
    @node --harmony server/slack/ranking
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;server/slack/ranking&lt;/code&gt; file will grab the top five in the Mongo database, format it, and then &lt;code&gt;POST&lt;/code&gt; it to the #pingpong Slack endpoint.&lt;/p&gt;
&lt;p&gt;For the real-time updates, I also added logic to grab and format the relevant information and then to &lt;code&gt;POST&lt;/code&gt; to the endpoint whenever a new game outcome is submitted through the app.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that PongBot is currently closed source, because I am lazy and have our Slack token in the repository. Maybe I&amp;#x2019;ll open source it for other teams if there is interest!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can deploy your own very easily by following the instructions/using the &lt;code&gt;Deploy on Heroku&lt;/code&gt; button on the GitHub page (link below).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.github.com/lambtron/ladder&quot;&gt;Source&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/ladder/issues&quot;&gt;Submit an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;other-ping-pong-hacks-apps-projects&quot;&gt;Other Ping Pong hacks, apps, projects&lt;/h2&gt;
&lt;p&gt;It is no secret that any area with a high concentration of nerds, there will organically emerge some kick ass DIY projects around Ping Pong. And the Bay Area is no exception.&lt;/p&gt;
&lt;h3 id=&quot;-campaign-monitor-https-www-campaignmonitor-com-&quot;&gt;&lt;a href=&quot;https://www.campaignmonitor.com&quot;&gt;Campaign Monitor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We really respect the team over at Campaign Monitor, not only for just being rad people, but also for taking their ping pong culture &lt;em&gt;so&lt;/em&gt; seriously that they actually spun out their in-house ping pong pet project into its own commercial product, &lt;a href=&quot;http://www.pingpongninja.com/about/&quot;&gt;Ping Pong Ninja&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Read about their ascension into Ping Pong nirvana &lt;a href=&quot;https://www.campaignmonitor.com/blog/post/3179/we-take-ping-pong-seriously-around-these-parts/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;-si-digital-http-sidigital-co-&quot;&gt;&lt;a href=&quot;http://sidigital.co/&quot;&gt;Si Digital&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sure, tech-minded folks have been chastised for spending resources on solving problems for the 0.01% (you read correctly, the one percent of the one percent), such as &lt;a href=&quot;http://www.herecomestheairplane.co/&quot;&gt;world famine&lt;/a&gt; and &lt;a href=&quot;http://welldeserved.me/&quot;&gt;priviledge distribution&lt;/a&gt;. I suspect its only because the public has overlooked the tremendous contributions of Si Digital to the Ping Pong world, using RFID tags in the players&amp;#x2019; bats to track them, tapping buttons under the table to indicate a point, and having giant display screens in the room to keep score.&lt;/p&gt;
&lt;p&gt;Read about their unparalleled contributions to the Ping Pong world &lt;a href=&quot;http://sidigital.co/blog/lab-notes-hacking-our-ping-pong-table&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;We plan to hold 5-on-5 Ping Pong tournaments between companies! We just played &lt;a href=&quot;https://siftscience.com&quot;&gt;Sift Science&lt;/a&gt; a month ago (we lost 3-2, unfortunately) and it was a ton of fun!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/70h0Wk2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MountainGoat, representing Segment as #1 seed, putting up a monster of a fight. &lt;em&gt;Photo credit: &lt;a href=&quot;https://instagram.com/p/2FTRgjNkUE/&quot;&gt;Prateek&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Want to challenge the Segment team to a match? Contact me &lt;a href=&quot;mailto:andy@segment.com?Subject=Ping%20Pong%20Match&quot;&gt;here&lt;/a&gt; and we&amp;#x2019;ll get it setup!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>BottomOfProductHunt: The Long-Tail of Product Hunt Posts</title>
    <link href="http://blog.andyjiang.com/bottom-of-product-hunt"/>
    <id>http://blog.andyjiang.com/bottom-of-product-hunt</id>
    <updated>2015-05-30T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Exactly what it sounds like. Everyday, there are several gems just hiding at the bottom of &lt;a href=&quot;https://www.producthunt.com&quot;&gt;Product Hunt&lt;/a&gt;. This site will only display those posts so you won’t get distracted from the “home runs”.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Exactly what it sounds like. Everyday, there are several gems just hiding at the bottom of &lt;a href=&quot;https://www.producthunt.com&quot;&gt;Product Hunt&lt;/a&gt;. This site will only display those posts so you won&amp;#x2019;t get distracted from the &amp;#x201C;home runs&amp;#x201D;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lambtron/bottomofproducthunt/master/client/img/screenshot.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.bottomofproducthunt.com&quot;&gt;Live&lt;/a&gt;. &lt;a href=&quot;https://www.github.com/lambtron/bottomofproducthunt&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Nightmare-LinkedIn: Crawling LinkedIn and Creating a LinkedIn API</title>
    <link href="http://blog.andyjiang.com/crawling-linkedin"/>
    <id>http://blog.andyjiang.com/crawling-linkedin</id>
    <updated>2015-05-25T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;LinkedIn in true LinkedIn fashion has shut off its API for developers to use. But that’s ok—we all knew this day was coming! Regardless, the inter webs allows us additional alternatives to programmatically grab the data that we need.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;LinkedIn in true LinkedIn fashion has shut off its API for developers to use. But that&amp;#x2019;s ok&amp;#x2014;we all knew this day was coming! Regardless, the inter webs allows us additional alternatives to programmatically grab the data that we need.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nightmarejs.org/&quot;&gt;Nightmare&lt;/a&gt; is a high-level wrapper for PhantomJS (created right here at &lt;a href=&quot;https://www.segment.com/&quot;&gt;Segment&lt;/a&gt;) to help us automate various web tasks that did not have an API. Nightmare not only makes it much easier to write and maintain code for virtual browsing, but also provides a platform to build &lt;a href=&quot;https://github.com/segmentio/nightmare#plugins&quot;&gt;plugins&lt;/a&gt; to repeat automated sequences in a single call.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lambtron/nightmare-linkedin&quot;&gt;Nightmare-LinkedIn&lt;/a&gt; is a LinkedIn plugin that allows you to easily interface with LinkedIn&amp;#x2019;s website. A few methods that are exposed include &lt;code&gt;.login()&lt;/code&gt;, &lt;code&gt;.search()&lt;/code&gt;, &lt;code&gt;.filter()&lt;/code&gt;, &lt;code&gt;.crawl()&lt;/code&gt;, and &lt;code&gt;.connect()&lt;/code&gt;. Here is a quick example of how to use this plugin with Nightmare to login to your CEO&amp;#x2019;s LinkedIn account and then view two pages the profiles of product managers in United States (with the intent that the users whom the bot has crawled will see your CEO viewing his/her profile):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;
/**
 * Dependencies.
 */

var Nightmare = require(&amp;apos;nightmare&amp;apos;);
var LinkedIn = require(&amp;apos;nightmare-linkedin&amp;apos;);
var nightmare = new Nightmare();

/**
 * Set variables.
 */

var email = &amp;apos;ceo@startup.com&amp;apos;;
var password = &amp;apos;selltoproductmanagers&amp;apos;;
var type = &amp;apos;people&amp;apos;;
var query = &amp;apos;product manager&amp;apos;;
var filter = [&amp;apos;United States&amp;apos;];
var pages = 2;

/**
 * Set nightmare commands.
 */

nightmare

  // Login to LinkedIn.
  .use(LinkedIn.login(email, password))

  // Search for something and set the types of results.
  .use(LinkedIn.search(type, query))

  // Filter the search results for &amp;apos;United States&amp;apos;.
  .use(LinkedIn.filter(filter))

  // Crawl results for two pages.
  .use(LinkedIn.crawl(pages))

  // Execute commands.
  .run(done);
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;writing-the-linkedin-nightmare-plugin&quot;&gt;Writing the LinkedIn Nightmare plugin&lt;/h2&gt;
&lt;p&gt;The entirety of the code logic is &lt;a href=&quot;https://github.com/lambtron/nightmare-linkedin/blob/master/index.js&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;creating-an-api&quot;&gt;Creating an API&lt;/h2&gt;
&lt;p&gt;With Nightmare, you could even create an HTTP API. Set up a server with endpoints that accept requests, which contains information about a query, let&amp;#x2019;s say an email address, then uses the plugin to search LinkedIn with the email, and ultimately returns to the API user the results.&lt;/p&gt;
&lt;p&gt;Of course if LinkedIn notices suspicious activity from your server&amp;#x2019;s IP, it is very likely that they will block any requests from it. In which case it is helpful to limit your use, proxy through other IP addresses, or just hire people from mechanical turk or other crowd service providers to retrieve data from/interface with LinkedIn for you.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this or follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GitHub Social Slack: Posting GitHub User Events in Slack</title>
    <link href="http://blog.andyjiang.com/github-social-slack"/>
    <id>http://blog.andyjiang.com/github-social-slack</id>
    <updated>2015-05-15T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Slack is awesome. So is GitHub. Also, GitHub’s integration with Slack is neat, but only sends events on a given repo or organization. How cool would it be if we could send updates based on other users (when someone watches a new repo, forks or creates a repo, deploys something, etc.) into Slack?&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Slack is awesome. So is GitHub. Also, GitHub&amp;#x2019;s integration with Slack is neat, but only sends events on a given repo or organization. How cool would it be if we could send updates based on other users (when someone watches a new repo, forks or creates a repo, deploys something, etc.) into Slack?&lt;/p&gt;
&lt;p&gt;The use case that inspired this is my side project of side project hackers, 20% Club. I wanted a passive and ambient way to send all of the coding activity into a Slack channel so we can see what new repos others are watching, forking, and creating. At first I was thinking of building an app and having each user auth with their GitHub account, but then realized the easier way would be just to create a new dummy user who just &amp;#x201C;follows&amp;#x201D; everyone&amp;#x2019;s GitHub accounts. Then the dummy user&amp;#x2019;s news feed would be exactly what would be posted into Slack.&lt;/p&gt;
&lt;p&gt;Taking this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ef6090465557faa52e02076e4684268c652ce047/687474703a2f2f692e696d6775722e636f6d2f694b69756765322e706e67&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;..and posting it into Slack:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/281e140794314d3adcba06a595a5590d828ccc34/687474703a2f2f692e696d6775722e636f6d2f34693866376b772e706e67&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Check the source code below to fork or deploy your own version!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lambtron/github-social-slack&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>#Chipper: Tweet Money Live</title>
    <link href="http://blog.andyjiang.com/gochipper-tweet-live-money"/>
    <id>http://blog.andyjiang.com/gochipper-tweet-live-money</id>
    <updated>2015-04-15T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.periscope.tv/&quot;&gt;Periscope&lt;/a&gt; and &lt;a href=&quot;http://meerkatapp.co/&quot;&gt;Meerkat&lt;/a&gt; have brought live streaming to the masses. &lt;a href=&quot;http://www.allkpop.com/buzz/2014/09/top-8-mukbang-online-streamers-on-afreecatv&quot;&gt;Mukbang stars in Korea&lt;/a&gt; and &lt;a href=&quot;http://qz.com/206694/chinas-tech-firms-are-counting-on-single-men-to-watch-more-live-karaoke-online/&quot;&gt;karaoke stars in China&lt;/a&gt; are already making a living via financial transactions over live streaming services (such as &lt;a href=&quot;http://afreeca.com/&quot;&gt;Afreeca&lt;/a&gt;), but Periscope and Meerkat don’t have this feature.. yet.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;&lt;a href=&quot;https://www.periscope.tv/&quot;&gt;Periscope&lt;/a&gt; and &lt;a href=&quot;http://meerkatapp.co/&quot;&gt;Meerkat&lt;/a&gt; have brought live streaming to the masses. &lt;a href=&quot;http://www.allkpop.com/buzz/2014/09/top-8-mukbang-online-streamers-on-afreecatv&quot;&gt;Mukbang stars in Korea&lt;/a&gt; and &lt;a href=&quot;http://qz.com/206694/chinas-tech-firms-are-counting-on-single-men-to-watch-more-live-karaoke-online/&quot;&gt;karaoke stars in China&lt;/a&gt; are already making a living via financial transactions over live streaming services (such as &lt;a href=&quot;http://afreeca.com/&quot;&gt;Afreeca&lt;/a&gt;), but Periscope and Meerkat don&amp;#x2019;t have this feature.. yet.&lt;/p&gt;
&lt;p&gt;Since Meerkat&amp;#x2019;s commenting system relies on Twitter (you basically @ the broadcaster in a tweet when you chat in the Meerkat broadcast), I thought it would be neat to build a way to pay someone with just a tweet. Basically, both the recipient and sender &lt;em&gt;must&lt;/em&gt; be authenticated with a payment solution (I went with &lt;a href=&quot;https://developer.venmo.com/&quot;&gt;Venmo&lt;/a&gt; due to its ubiquity in the consumer payments space) and provide their twitter handles. Then, any tweet containing &lt;code&gt;#chipper&lt;/code&gt;, &lt;code&gt;$X&lt;/code&gt; (&amp;#x2018;X&amp;#x2019; being a number), and &lt;code&gt;@&lt;/code&gt; someone, will take money from the sender&amp;#x2019;s Venmo account and put it into that of the recipient.&lt;/p&gt;
&lt;p&gt;In the future, instead of just accepting Venmo, #Chipper would also allow people to sign up with a credit card (via &lt;a href=&quot;https://stripe.com/connect&quot;&gt;Stripe connect&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.gochipper.com&quot;&gt;Live&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Blink: Speed Reading on the Go</title>
    <link href="http://blog.andyjiang.com/blink-speed-reading-on-the-go"/>
    <id>http://blog.andyjiang.com/blink-speed-reading-on-the-go</id>
    <updated>2015-02-20T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;We’ve all heard about &lt;a href=&quot;https://www.squirt.io/&quot;&gt;Squirt&lt;/a&gt;—a tool that allows you to speed read with a technique that minimizes eye scanning, thereby effectively helping you reach WPMs of 1000 (allegedly). &lt;a href=&quot;http://blinkread.herokuapp.com&quot;&gt;Blink&lt;/a&gt; is the mobile version of Squirt.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;We&amp;#x2019;ve all heard about &lt;a href=&quot;https://www.squirt.io/&quot;&gt;Squirt&lt;/a&gt;&amp;#x2014;a tool that allows you to speed read with a technique that minimizes eye scanning, thereby effectively helping you reach WPMs of 1000 (allegedly). &lt;a href=&quot;http://blinkread.herokuapp.com&quot;&gt;Blink&lt;/a&gt; is the mobile version of Squirt.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;
&lt;p&gt;On your mobile device, first copy any URL so that it is on your clipboard. Then open up &lt;a href=&quot;http://blinkread.herokuapp.com&quot;&gt;Blink&lt;/a&gt; on your device (if you&amp;#x2019;re on iOS, I recommend saving it to home screen!). Lastly, paste the URL in the app and wait. You will soon see this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/JRZJKDv.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work&lt;/h2&gt;
&lt;p&gt;I created a &lt;a href=&quot;https://github.com/lambtron/fetchtext-api&quot;&gt;separate API service&lt;/a&gt; that would take any URL and return just the text. This API service uses &lt;a href=&quot;https://github.com/request/request&quot;&gt;request&lt;/a&gt; to get the HTML of the URL and then &lt;a href=&quot;https://github.com/ageitgey/node-unfluff&quot;&gt;Unfluff&lt;/a&gt; to extract the main text from the HTML.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fetchtext-api.herokuapp.com/fetch/?url=http://www.polygon.com/2014/6/26/5842180/shovel-knight-review-pc-3ds-wii-u&quot;&gt;Demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then, on the client side of this app, it tokenizes the text body into an array of words, find the &amp;#x2018;pivot&amp;#x2019; letter in each word, then display it as such one by one. Also if we see a period or other punctuation, we will insert additional punctuation in the array to give it the illusion that we are pausing.&lt;/p&gt;
&lt;p&gt;The pivot function:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;this._getPivot = function(word) {
  var i = 5;
  switch (word.length) {
    case 1:
      i = 1; // first
      break;
    case 2:
    case 3:
    case 4:
    case 5:
      i = 2; // second
      break;
    case 6:
    case 7:
    case 8:
    case 9:
      i = 3; // third
      break;
    case 10:
    case 11:
    case 12:
    case 13:
      i = 4; // fourth
      break;
    default:
      i = 5; // fifth
  };
  return i;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually showing the word on the screen. The parameter &lt;code&gt;i&lt;/code&gt; represents the index in the array &lt;code&gt;this.words&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;this._show = function(i) {
  var p = this._getPivot(this.words[i]);
  var html = &amp;apos;&amp;lt;span class=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;pre-pivot&amp;quot;&amp;gt;&amp;apos; + this.words[i].substr(0, p - 1) + &amp;apos;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;apos;;
  html += &amp;apos;&amp;lt;span class=&amp;quot;right&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;pivot&amp;quot;&amp;gt;&amp;apos; + this.words[i].substr(p - 1, 1) + &amp;apos;&amp;lt;/span&amp;gt;&amp;apos;;
  html += &amp;apos;&amp;lt;span class=&amp;quot;post-pivot&amp;quot;&amp;gt;&amp;apos; + this.words[i].substr(p, this.words[i].length - p) + &amp;apos;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;apos;;
  (this.el).innerHTML = html;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The styling so that the pivot character is always in the middle:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-css&quot;&gt;span.left {
  display: inline-block;
  position: absolute;
  left: 0px;
  height: 100%;
  width: 650px;
}

span.right {
  display: inline-block;
  height: 100%;
  margin-left: 565px;
  width: 300px;
}

span.pivot {
  color: red;
}

span.pre-pivot {
  float: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;http://blinkread.herokuapp.com&quot;&gt;Demo&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/blink&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Twapchat: Ephemeral Tweeting with Twilio Picture Messaging and Twitter</title>
    <link href="http://blog.andyjiang.com/twapchat-ephemeral-tweets"/>
    <id>http://blog.andyjiang.com/twapchat-ephemeral-tweets</id>
    <updated>2015-01-15T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Send pictures to a Twilio phone number, which posts it to Twitter. First 10 people will then get to view the picture before it self-destructs.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Send pictures to a Twilio phone number, which posts it to Twitter. First 10 people will then get to view the picture before it self-destructs.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Text a picture to a (240) 565-0664&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/twapchat&quot;&gt;@twapchat&lt;/a&gt; tweets the picture&lt;/li&gt;
&lt;li&gt;picture only gets 10 views before it self destructs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-does-it-work&quot;&gt;How does it work&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.twilio.com&quot;&gt;Twilio&lt;/a&gt; receives picture and sends a &lt;code&gt;POST&lt;/code&gt; request to a specified endpoint with picture data&lt;/li&gt;
&lt;li&gt;picture is saved to MongoDB&lt;/li&gt;
&lt;li&gt;URL is generated and hosted on server&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/twapchat&quot;&gt;@twapchat&lt;/a&gt; tweets the URL&lt;/li&gt;
&lt;li&gt;the server tracks the number of requests per URL; if 10 views then delete in Mongo, destroy URL, remove tweet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://twapchat.herokuapp.com/&quot;&gt;Demo&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/twapchat&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Thunkify Non-idiomatic NodeJS Functions</title>
    <link href="http://blog.andyjiang.com/thunkify-non-idiomatic-nodejs-functions"/>
    <id>http://blog.andyjiang.com/thunkify-non-idiomatic-nodejs-functions</id>
    <updated>2014-12-13T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Yes, thunks are great. But what if the Object or Function that you’re trying to thunkify doesn’t fulfill the idiomatic node.js callback expression &lt;code&gt;function(err, res)&lt;/code&gt;?&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Yes, thunks are great. But what if the Object or Function that you&amp;#x2019;re trying to thunkify doesn&amp;#x2019;t fulfill the idiomatic node.js callback expression &lt;code&gt;function(err, res)&lt;/code&gt;?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var thunkedFunction = function() {
  return function(fn) {
    unthunkedFunction(function(err, param1, param2, param3) {
      if (err) fn(err, null);
      fn(null, { param1: param1, param2: param2, param3: param3 });
    });
  };
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can use it as such:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var res = yield thunkedFunction();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an example with &lt;a href=&quot;http://visionmedia.github.io/superagent/&quot;&gt;&lt;code&gt;superagent&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var request = require(&amp;apos;superagent&amp;apos;);

/**
 * Thunkified POST.
 */

function post(uri, body) {
  return function(fn) {
    request
      .post(uri)
      .send(body)
      .end(fn);
  };
};

/**
 * Thunkified GET.
 */

function get(uri) {
  return function(fn) {
    request
      .get(uri)
      .end(fn);
  };
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One other neat thing about thunked functions that if you need to test the expression to see if you are receiving an error, you can access that as such:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;var res = yield get(&amp;quot;https://www.google.com&amp;quot;);

get(&amp;quot;https://www.google.com&amp;quot;)(function(err, res) {
  // &#x60;res&#x60; here is the same as the &#x60;res&#x60; above
  // you can also access &#x60;err&#x60; here
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Pepper Botts: Simplify Your Calendar Events</title>
    <link href="http://blog.andyjiang.com/pepper-botts"/>
    <id>http://blog.andyjiang.com/pepper-botts</id>
    <updated>2014-11-16T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;A friend recently got in touch with me with a pain that he knew technology could solve. We use Google calendars to schedule meetings, but how great would it be for something to automatically conference us in on our cell phones when the meeting starts?&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;A friend recently got in touch with me with a pain that he knew technology could solve. We use Google calendars to schedule meetings, but how great would it be for something to automatically conference us in on our cell phones when the meeting starts?&lt;/p&gt;
&lt;p&gt;Many people live in their calendar. Pepper Botts allows you to live on the phone and not in apps and clicks.&lt;/p&gt;
&lt;p&gt;If you&amp;#x2019;ve ever been frustrated by the idea that scheduled phone calls require reminders before the event, phone number links (when on mobile), and clicks or dials at the time of the phone call, then you will love Pepper Botts.&lt;/p&gt;
&lt;p&gt;To make scheduled phone calls as frictionless as possible, we created Pepper Botts to monitor your Google Calendar for scheduled phone calls, call you at the proper time, and then patch you in with the other caller.&lt;/p&gt;
&lt;p&gt;With Pepper Botts, your scheduled phone calls become automatic and frictionless - as all scheduled events should be.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://31.media.tumblr.com/efb5c512409a227e4966033874d1d154/tumblr_inline_nf5ycu9sVY1qza2fi.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Like the amazing assistant pictured above, Pepper Botts will make your life easier.&lt;/p&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;
&lt;p&gt;To make Pepper Botts work, you must be using Google Calendar and create a standard calendar event at least two phone numbers (you and the other party/parties).&lt;/p&gt;
&lt;p&gt;At the time of the event, Pepper Botts will make outbound calls to the numbers in the event with Twilio and conference everyone into the same room.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So the next time you find yourself scheduling a phone call in your google calendar with a title like &amp;#x201C;Call Jenny @ 212-555-1212&amp;#x201D; or &amp;#x201C;[Phone Call] Sean to call Aaron &amp;#x2014; 212-555-1212&amp;#x201D;, Pepper Botts can help by monitoring your calendar for phone numbers you specify and then conference them together at the specified time.&lt;/p&gt;
&lt;p&gt;Pepper Botts brings the Phone Call back - back to your calendar and back on track as the best form of communication when used properly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pepperbotts.herokuapp.com&quot;&gt;Demo&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/pepperbotts&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tweet me @andyjiang for comments and questions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Credits to Josh Bowen for inspiration and contribution to this post.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Intermediate Cron Jobs with Heroku</title>
    <link href="http://blog.andyjiang.com/intermediate-cron-jobs-with-heroku"/>
    <id>http://blog.andyjiang.com/intermediate-cron-jobs-with-heroku</id>
    <updated>2014-11-04T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;We all know that Heroku has made app deployment as easy as git push heroku master (and, indirectly, educating the vast majority of junior junior devs a tiny sliver of git). Heroku even went ahead and built out an ecosystem of tools to help developers easily add services to their apps.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;We all know that Heroku has made app deployment as easy as git push heroku master (and, indirectly, educating the vast majority of junior junior devs a tiny sliver of git). Heroku even went ahead and built out an ecosystem of tools to help developers easily add services to their apps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Want to add a datastore? You can enable Redis to Mongo to Postgres.&lt;/li&gt;
&lt;li&gt;How about logging? Keen.io, Flydata, Logentries can help out.&lt;/li&gt;
&lt;li&gt;Monitoring? Again, you have Librato, Airbrake, New Relic, and Bugsnag, among others.&lt;/li&gt;
&lt;li&gt;Want to run schedule jobs? Well, there is Heroku Scheduler.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yes, but if you&amp;#x2019;ve ever played with Heroku Scheduler, it unfortunately is very limited in flexibility, especially in the range and variety with which you can schedule jobs: only in 10 minute, 60 minute, or 24 hour intervals.&lt;/p&gt;
&lt;p&gt;Heroku recently came out with clock processes for custom job scheduling. Here is some example code in nodejs to help demonstrate how it works.&lt;/p&gt;
&lt;p&gt;In your Procfile, you define for Heroku the clock and the worker process, as such.&lt;/p&gt;
&lt;h2 id=&quot;procfile-&quot;&gt;Procfile:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;web: node server.js
worker: node bot.js
clock: node clock.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The clock.js file defines the singleton process (so as to avoid duplicate jobs queueing and complicated locking logic), whose only function is to schedule a task to the worker process. You can use any library to do so, but here we use npm&amp;#x2019;s cron. The task that is executed is assigned to onTick.&lt;/p&gt;
&lt;h2 id=&quot;clock-js&quot;&gt;clock.js&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;// clock.js
var CronJob = require(&amp;apos;cron&amp;apos;).CronJob;
var bot = require(&amp;apos;./bot.js&amp;apos;);

new CronJob({
  cronTime: &amp;quot;13 9,11,16,20,22 * * *&amp;quot;, // everyday, 9:13, 11:13, 4:13, 8:13,
  onTick: bot.start(),
  start: true,
  timeZone: &amp;quot;America/Los_Angeles&amp;quot;
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;bot-js&quot;&gt;bot.js&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;// bot.js
module.exports = {
  start: function() { /* do stuff */ }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope this basic example helps people use Heroku&amp;#x2019;s new custom clock processor to schedule jobs!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tech Startup Definitions</title>
    <link href="http://blog.andyjiang.com/definitions"/>
    <id>http://blog.andyjiang.com/definitions</id>
    <updated>2014-07-29T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;It is easy to get confused with the jargon that is emerging from the rapidly growing startup scene. This post attempts to clarify some terms.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;It is easy to get confused with the jargon that is emerging from the rapidly growing startup scene. This post attempts to clarify some terms.&lt;/p&gt;
&lt;h2 id=&quot;uber-for-x&quot;&gt;Uber for X&lt;/h2&gt;
&lt;p&gt;&amp;#x201C;User friendly&amp;#x201D;: The only way you&amp;#x2019;ll reach another human being is via email at &amp;#x201C;family@&amp;#x201D;.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Launch page&amp;#x201D;: 3am informercial meets web 2.0.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Flat design&amp;#x201D;: You&amp;#x2019;ll spend 50% more time clicking on empty boxes that actually aren&amp;#x2019;t buttons.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Stealth mode&amp;#x201D;: This next photosharing app requires fifth level federal security clearance.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Pivot&amp;#x201D;: The company is now selling it&amp;#x2019;s PP&amp;amp;E to stay solvent.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;API&amp;#x201D;: Unbeknownst to you, you&amp;#x2019;ll become a user by the end of the year.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Scalable&amp;#x201D;: They must have a lot of engineers.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Dead simple&amp;#x201D;: One mouse click may be avoided with thoughtful pre-planning and setup.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Product&amp;#x201D;: Like, an app, or something.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Integrations&amp;#x201D;: Expect to pay 25% more than what you originally had planned.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;MVP&amp;#x201D;: Sacrifice usability and utility for having a lot of conversations with the founder.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;-as-a-service&amp;#x201D;: You won&amp;#x2019;t recognize this line item in your expenses a year from now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>SutterBus: Your Personalized Muni Bus Tracker</title>
    <link href="http://blog.andyjiang.com/sutterbus"/>
    <id>http://blog.andyjiang.com/sutterbus</id>
    <updated>2014-02-20T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;If you take the muni on a daily basis, it can be a hassle checking bus prediction web sites/apps for your various routes and stops to get an estimation of when your next bus will arrive. This &lt;a href=&quot;http://sutterbus.herokuapp.com&quot;&gt;app&lt;/a&gt; requires one time setup, where you select the bus routes and the stops that you frequently take. It will then generate a unique URL (that you can book mark or save onto your phone) that will display real time prediction data for your selected routes and stops.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;If you take the muni on a daily basis, it can be a hassle checking bus prediction web sites/apps for your various routes and stops to get an estimation of when your next bus will arrive. This &lt;a href=&quot;http://sutterbus.herokuapp.com&quot;&gt;app&lt;/a&gt; requires one time setup, where you select the bus routes and the stops that you frequently take. It will then generate a unique URL (that you can book mark or save onto your phone) that will display real time prediction data for your selected routes and stops.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;
&lt;p&gt;Go &lt;a href=&quot;http://sutterbus.herokuapp.com/&quot;&gt;here&lt;/a&gt; either on your mobile Safari or on a desk top web browser. Select the routes and the bus stops that you primarily frequent. Hit the button and a unique URL will be generated for you (so you should save this one to your home screen to easily retrieve it in the future).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lambtron/nextbus/master/readme/readme.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;
&lt;p&gt;I used &lt;a href=&quot;http://www.nextbus.com/xmlFeedDocs/NextBusXMLFeed.pdf&quot;&gt;NextBus&amp;#x2019;s XML Feed&lt;/a&gt; to get the muni predictions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sutterbus.herokuapp.com&quot;&gt;Demo&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/nextbus&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How IFTTT, Mandrill, and Twilio is helping me find an apartment in SF</title>
    <link href="http://blog.andyjiang.com/how-ifttt-mandrill-and-twilio"/>
    <id>http://blog.andyjiang.com/how-ifttt-mandrill-and-twilio</id>
    <updated>2013-06-30T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Anyone familiar with the SF apartment market understands the tremendous pain and frustrations in finding an available lease at a reasonable price. We have all heard and shared war stories of the hourly refreshing of Craigslist and bringing all of your bank statements and necessary paperwork to the open house just to win a chance to secure a lease for an apartment. In true SF-technology fashion, I decided to minimize response time to a new choice apartment listings on Craigslist by wiring together &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt;, &lt;a href=&quot;https://mandrillapp.com&quot;&gt;Mandrill&lt;/a&gt;, and &lt;a href=&quot;https://www.twilio.com&quot;&gt;Twilio&lt;/a&gt; to auto respond with an open email and a click-to-call to my phone number and the number in the listing to schedule an appointment.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Anyone familiar with the SF apartment market understands the tremendous pain and frustrations in finding an available lease at a reasonable price. We have all heard and shared war stories of the hourly refreshing of Craigslist and bringing all of your bank statements and necessary paperwork to the open house just to win a chance to secure a lease for an apartment. In true SF-technology fashion, I decided to minimize response time to a new choice apartment listings on Craigslist by wiring together &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt;, &lt;a href=&quot;https://mandrillapp.com&quot;&gt;Mandrill&lt;/a&gt;, and &lt;a href=&quot;https://www.twilio.com&quot;&gt;Twilio&lt;/a&gt; to auto respond with an open email and a click-to-call to my phone number and the number in the listing to schedule an appointment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note 7/8/2013: Craigslist makes it impossible (please let me know if you were able to get around it) to allow Mechanize to retrieve HTML from Heroku&amp;#x2019;s server. However, it works when I send a request from my local server. If anyone knows why it would make a difference, please leave a comment!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;ifttt&quot;&gt;IFTTT&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt; (&amp;#x2018;If this, then that&amp;#x2019;) allows you to create &amp;#x2018;recipes&amp;#x2019; using the simple conditional structure &amp;#x2018;If this, then that&amp;#x2019; and various &lt;a href=&quot;https://ifttt.com/channels&quot;&gt;&amp;#x2018;ingredients&amp;#x2019;&lt;/a&gt; (i.e. craigslist queries, instagram posts, buzzfeed articles, tweets). It is powerful due to its simplicity and flexibility; it can enable anyone to put the web to work without any programming knowledge.&lt;/p&gt;
&lt;p&gt;I used IFTTT to send an email to my email address when there is a new Craigslist query that matches the me and my roommates&amp;#x2019; apartment listing preferences. This way, any new Craigslist listing that fits the query that I have set will be sent directly to my email inbox.&lt;/p&gt;
&lt;h2 id=&quot;mandrill&quot;&gt;Mandrill&lt;/h2&gt;
&lt;p&gt;I &lt;a href=&quot;http://help.mandrill.com/entries/21699367-Inbound-Email-Processing-Overview&quot;&gt;setup a subdomain&lt;/a&gt; (I added &amp;#x2018;to&amp;#x2019; as the MX record and have it setup on my Mandrill account) responsible to receiving email messages and use Mandrill to parse the inbound email (similar to &lt;a href=&quot;/welcome-to-the-a-list&quot;&gt;how I built the A-List inbound parser&lt;/a&gt;). In the below code sample, it is important to note that you must first return a &amp;#x2018;200&amp;#x2019; to let Mandrill know that it is the right address to send the POST request of the inbound email.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;require &amp;apos;mechanize&amp;apos;

class InboxController &amp;lt; ApplicationController
  include Mandrill::Rails::WebHookProcessor

  # For the apartment hunt.
  def parse_inbound_sf_apartment_email
    # Mandrill needs an ok in order to proceed to POST Mandrill events to this endpoint.
    if request.head?
      head :ok
    else
      # When receive new IFTTT email, use Mechanize to go to the URL of the listing.
      # Then get two things:
      # - anything that resembles a phone number
      # - a response email address
      # Afterwards, dial order for all roommates and connect w the broker
      # Then send a templatized email.

      if params[&amp;apos;mandrill_events&amp;apos;]
        text_body = &amp;apos;&amp;apos;
        JSON.parse(params[&amp;apos;mandrill_events&amp;apos;]).each do |raw_event|
          event = Mandrill::WebHook::EventDecorator[raw_event]
          text_body = event[&amp;apos;msg&amp;apos;][&amp;apos;text&amp;apos;].to_s
        end

        # Get the URL of the craigslist listing.
        url = text_body[/http\:(.*?)\.html/m]

        # Mechanize to get email address and phone number.
        a = Mechanize.new

        begin
          craigslist_listing = a.get(url.to_s)
        rescue ArgumentError
          # URL is not valid
          puts &amp;quot;\n\n\n\nURL IS NOT VALID\n\n\n\n&amp;quot;
          return &amp;quot;error&amp;quot;
        else
          # Regex to get email and phone number
          email_addresses = craigslist_listing.content.to_s.scan(/[\w.!#\$%+-]+@[\w-]+(?:\.[\w-]+)+/).uniq!
          phone_numbers = craigslist_listing.content.to_s.scan(/\W(\d{3}.?\d{3}.?\d{4})\W/m).uniq! - craigslist_listing.content.to_s.scan(/postingID=(.*?)\W/mi).uniq!

          # &amp;apos;Click-to-call&amp;apos;.
          phone_numbers.each do |phone_number|
            # puts phone_number
            # Make outbound call to 314 (Andy, Jeff, whoever else).
            # Then, make outbound call to phone number.
            click_to_call(phone_number[0])
          end

          # Send templatized email to email_address.
          email_addresses.each do |email_address|
            Mailer.email_apartment_listing(email_address, &amp;apos;Apartment listing&amp;apos;).deliver
          end
        end
      end
      render &amp;apos;app/views/inbox/sfapartments.html&amp;apos;, :formats =&amp;gt; [:html]
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the email is successfully received and parsed, I use the &lt;a href=&quot;http://mechanize.rubyforge.org/&quot;&gt;Mechanize library&lt;/a&gt; to navigate to the Craigslist listing (line 31). Then, a few regex commands to find and scrape an email address (line 34) and a phone number (line 35). With the email address, I use ActionMailer (line 46) to send out a templatized email, cc&amp;#x2019;ing my roommates, asking to schedule an appointment to check out the apartment.&lt;/p&gt;
&lt;h2 id=&quot;twilio&quot;&gt;Twilio&lt;/h2&gt;
&lt;p&gt;If I was successfully able to scrape a phone number from the Craigslist listing, then Twilio will automatically make two outbound phone calls (one to my mobile phone and one to the number on the listing). Throughout the day, I will be able to pick up my phone at my leisure and speak with somebody (if the call connects on the other end) to schedule an appointment.&lt;/p&gt;
&lt;p&gt;Note that the routing must also be setup in your Rails app (the sample code is not shown here).&lt;/p&gt;
&lt;p&gt;The first step is that we are sending a request to Twilio to initiate a phone call to my phone number (agent_number or &amp;#x2018;555-555-5555&amp;#x2019; in the example below) with dynamic TwiML (Twilio&amp;#x2019;s XML-like proprietary markup language).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;require &amp;apos;twilio-ruby&amp;apos;

class InboxController &amp;lt; ApplicationController
    BASE_URL = &amp;apos;http://www.andyjiang.com/&amp;apos;

    # /click-to-call-request
    def click_to_call(calling_to)
        # debugging purposes.
        twilio_number = &amp;apos;4154444444&amp;apos;
        calling_to = digits_only(calling_to)

        agent_phone = &amp;apos;5555555555&amp;apos;
        caller_id = agent_phone

        # When we call the agent (andy + our apartment), we set the caller ID to the party we&amp;apos;re eventually
        # calling. Why? So you could call them back from normal cellphone later.
        begin
            @client = Twilio::REST::Client.new ACCOUNT_SID, AUTH_TOKEN
            @client.account.calls.create(
                :from =&amp;gt; twilio_number,
                :to =&amp;gt; agent_phone,
                :url =&amp;gt; BASE_URL + &amp;apos;/click-to-call-callscreen?calling_to=&amp;apos; + calling_to + &amp;apos;&amp;amp;caller_id=&amp;apos; + caller_id
            )
            puts &amp;quot;click to call initiated.&amp;quot;
        rescue
            400
        end

        render &amp;apos;app/views/inbox/sfapartments.html&amp;apos;, :formats =&amp;gt; [:html] 
    end

    # /click-to-call-callscreen
    # This handler receives an HTTP callback from Twilio once the agent has picked up
    # their phone. It first verifies that they&amp;apos;re ready to receive the call (to avoid
    # voicemail) and then defers to the final twiml URL.
    def click_to_call_callscreen
        @post_to = BASE_URL + &amp;apos;/click-to-call-twiml?calling_to=&amp;apos; + params[&amp;apos;calling_to&amp;apos;] + &amp;apos;&amp;amp;caller_id=&amp;apos; + params[&amp;apos;caller_id&amp;apos;]
        render :action =&amp;gt; &amp;apos;clicktocallcallscreen.xml.builder&amp;apos;, :layout =&amp;gt; false
    end

    # /click-to-call-twiml
    # This handler is fired if the callscreen detected a digit
    def click_to_call_twiml
        @calling_to = params[&amp;apos;calling_to&amp;apos;]
        @caller_id = params[&amp;apos;caller_id&amp;apos;]
        render :action =&amp;gt; &amp;apos;clicktocall.xml.builder&amp;apos;, :layout =&amp;gt; false
    end

    def digits_only(string)
        return string.gsub(/[^[0-9]]/, &amp;quot;&amp;quot;)
    end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first dynamic TwiML (line 38 above and &amp;#x2018;clicktocallcallscreen.xml.builder&amp;#x2019; below) tells Twilio to listen, upon a call connecting with my phone (agent_number or &amp;#x2018;555-555-5555&amp;#x2019;), for a keypad response indicating that I want to be connected with the Craigslist lister&amp;#x2019;s phone number. If I hit a key, then proceed to dial the other number and connect us. Note that I am  providing yet another dynamic action URL (&amp;#x2018;@post_to&amp;#x2019;) that will populate the final TwiML with the correct phone numbers that will be connected in the final call.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;xml.instruct!
xml.Response do
    xml.Gather(:action =&amp;gt; @post_to, :numDigits =&amp;gt; 1, :timeout =&amp;gt; &amp;apos;10&amp;apos;) do
        xml.Say &amp;quot;Press a key to accept&amp;quot;, :voice =&amp;gt; :woman
    end
    xml.Say &amp;quot;You didn&amp;apos;t press anything. Goodbye.&amp;quot;, :voice =&amp;gt; :woman
    xml.Hangup
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is in line 46 in inbox_controller.rb where the clicktocall.xml.builder (below) is called dynamically (with &amp;#x2018;@calling_to&amp;#x2019; and &amp;#x2018;@caller_id&amp;#x2019; both being passed to the TwiML).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-ruby&quot;&gt;xml.instruct!
xml.Response do
    xml.Dial @calling_to, :callerId =&amp;gt; @caller_id
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result is Twilio automatically connecting me with the phone number listed on the Craigslist post. This is a derivation of a very popular Twilio use &amp;#x2018;Click-to-call&amp;#x2019; that many lead management and sales teams use to better engage with their customers.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Now I don&amp;#x2019;t have to be on Craigslist 24/7 to find a suitable apartment listing; I can just wait for my web server to send out emails or phone calls to schedule appointments with Craigslist posts that fit our preferences. Now if there were only a way to automate the showing up, preparing the paper work, competing against other bidders, and the remainder of the apartment leasing process.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Phantachat: NodeJS, WebSockets, and Ephemeral Conversation</title>
    <link href="http://blog.andyjiang.com/phantachat"/>
    <id>http://blog.andyjiang.com/phantachat</id>
    <updated>2013-06-03T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;In person conversation is fleeting. Words hang in the air for a brief moment then vanish suddenly. All participating members have to be present and aware in order to keep up with the conversation.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;In person conversation is fleeting. Words hang in the air for a brief moment then vanish suddenly. All participating members have to be present and aware in order to keep up with the conversation.&lt;/p&gt;
&lt;p&gt;Conversation online has traditionally been very asynchronous. Instant message and email both log your messages with a timestamp, allowing you to maintain a history conversations for you to browse afterwards. You can message your friend knowing that she probably won&amp;#x2019;t respond immediately.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://phantachat.herokuapp.com&quot;&gt;Phantachat&lt;/a&gt; is an online chat web app, but tries to mimic chat in person. Your messages linger for no longer than a few seconds, forcing you to have that page open on your screen to be able to follow the conversation. Messages are also sent in immediate real time, without having you to hit enter, and there is no backspace.&lt;/p&gt;
&lt;h2 id=&quot;websockets&quot;&gt;Websockets&lt;/h2&gt;
&lt;p&gt;Websocket is a web technology providing simultaneous two-way communications channels over a single TCP connection. This allows for immediate, seamless, synchronous data passing between the client and the server. We decided that in order to get the chat to behave as real time as possible, that we would choose to use Websockets (we went with Socket.io withNode.js/Express.js).&lt;/p&gt;
&lt;p&gt;Unfortunately, there are very few free web/application hosting services out there that support websockets. Heroku doesn&amp;#x2019;t support web sockets, but you can configure your application to instead use long polling, which allows the client to send HTTP requests to the server at regular intervals and immediately receives a response.&lt;/p&gt;
&lt;p&gt;Some other hosting platforms out there (www.appfog.com, &lt;a href=&quot;http://www.dotcloud.com&quot;&gt;http://www.dotcloud.com&lt;/a&gt;, &lt;a href=&quot;http://www.nodejitsu.com&quot;&gt;http://www.nodejitsu.com&lt;/a&gt;) may support web sockets, but unfortunately they don&amp;#x2019;t provide a free tier. Our next plans are to spin up an instance on AWS so we can deploy a solution that uses websockets instead of long polling.&lt;/p&gt;
&lt;h2 id=&quot;dynamic-chatrooms&quot;&gt;Dynamic Chatrooms&lt;/h2&gt;
&lt;p&gt;In order to generate a unique chatroom, we created added some logic to the routing: if someone goes to the root, then generate a new hash (I used the hashids package for generating codes) and redirect to the new route with the hash at the end and start a new socket.io namespace; if someone goes to a hash that exists, then throw that person into the same socket.io namespace; and if someone goes to a route that is a hash that doesn&amp;#x2019;t exist, the server will return an error page.&lt;/p&gt;
&lt;p&gt;With socket.io, there are two main ways of creating &amp;#x2018;chatrooms&amp;#x2019;: using &amp;#x2018;rooms&amp;#x2019; or using &amp;#x2018;namespacing&amp;#x2019;. We decided to use namespacing, because namespaces can be connected to by the client (but only if it already exists on the server). With rooms, they can only be joined on the server side.&lt;/p&gt;
&lt;p&gt;When a new namespace is created (when a new hash is generated on the server), the server creates a new namespace, then passes the hash to the client to allow the client to join that specific namespace.&lt;/p&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;This is still a very simple app. Next steps could be sharing other types of media that will also vanish within a few seconds (images, for instance). Or to allow more than two people to join each chat room (right now, it is only one on one).&lt;/p&gt;
&lt;p&gt;Suggestions, feedback, and new ideas are always welcome!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://phantachat.herokuapp.com&quot;&gt;Demo&lt;/a&gt;. &lt;a href=&quot;https://github.com/lambtron/phantachat&quot;&gt;Source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Welcome to the A-List</title>
    <link href="http://blog.andyjiang.com/welcome-to-the-a-list"/>
    <id>http://blog.andyjiang.com/welcome-to-the-a-list</id>
    <updated>2013-05-15T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Recently, a conversation over dinner about personal life hacks without the direct intention of blatant commercialism spawned a neat idea that scratches an itch that us west coast jet setters face occasionally—not only just checking into Southwest flights, but also checking into those flights as early as possible to attain a highly coveted ‘A-list’ boarding group.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Recently, a conversation over dinner about personal life hacks without the direct intention of blatant commercialism spawned a neat idea that scratches an itch that us west coast jet setters face occasionally&amp;#x2014;not only just checking into Southwest flights, but also checking into those flights as early as possible to attain a highly coveted &amp;#x2018;A-list&amp;#x2019; boarding group.&lt;/p&gt;
&lt;p&gt;There have been too many times when the 24 hour period prior to the flight occurs when I&amp;#x2019;m away from my computer. This &lt;a href=&quot;http://www.andyjiang.com/sw&quot;&gt;web application&lt;/a&gt;, however, will check into your Southwest flight for you.&lt;/p&gt;
&lt;p&gt;Instead of going to a &lt;a href=&quot;http://checkintomyflight.com/&quot;&gt;website&lt;/a&gt; where you input the information necessary for you to check in (name and confirmation number), you now can you just forward your Southwest flight confirmation email (the one with the subject that says &amp;#x2018;Your trip is right around the corner!&amp;#x2019;) to sw@to.andyjiang.com. Then, when the 24 hour check in window opens up, the web application will check in to the flight for you.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note (7/01/2013): Southwest asked me to take down the app! Happy hacking everyone!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note (5/31/2013): Recently, this app was featured in &lt;a href=&quot;http://lifehacker.com/southwest-a-list-automatically-checks-you-into-southwes-510333096&quot;&gt;Lifehacker&lt;/a&gt;. Kindly note that this app is still in beta and there are probably many bugs that have yet to surface themselves (one such obvious one is checking in multiple passengers, as I wrote this for me and my buddies and didn&amp;#x2019;t have children to buy tickets and for whom to check-in). If you do run into any issues or have any feedback, feel free to tweet at me @andyjiang or comment on this blog post and I will make a note of it.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-does-the-app-work-&quot;&gt;How does the app work?&lt;/h2&gt;
&lt;p&gt;The Mandrill (hosted by Mailchimp) server receives an inbound email and sends a POST request to the web server. The web server then extracts the text from the body of the email from the POST request and runs several regular expressions on it to get the following pieces of information: first name, last name, confirmation number, your email address, the URL it needs to go to in order to check in for you. It saves this data into a Mongo database (MongoHQ add-on with Heroku).&lt;/p&gt;
&lt;p&gt;An hourly task runs on the server (Heroku Scheduler) to look at all of the records in the mongo database; for each record, if it is time to check in, the web server  uses the Mechanize library to get and parse the HTML of the confirmation web site, fill in the required information, and check in for you. Then it takes your boarding group and boarding position and sends you a confirmation email.&lt;/p&gt;
&lt;h2 id=&quot;tools-i-used&quot;&gt;Tools I used&lt;/h2&gt;
&lt;p&gt;Since debugging is 90% of any project, it is important to learn to break the project into small, achievable goals, to quickly isolate problems and to iterate through working solutions. Below is a list of some of the tools I used to test quickly and build out the application.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rubular.com/&quot;&gt;&lt;strong&gt;Rubular&lt;/strong&gt;&lt;/a&gt;: Regular expressions were critical to parsing the body of the inbound email. This nifty website allows you to test all of your regexp patterns against Strings of your choice. Combined with &lt;a href=&quot;http://en.wikipedia.org/wiki/Interactive_Ruby_Shell&quot;&gt;IRB&lt;/a&gt; and &lt;a href=&quot;http://ruby-doc.org/core-2.0/Class.html&quot;&gt;&lt;code&gt;.class?&lt;/code&gt;&lt;/a&gt;, you can very quickly determine the right commands to extract the information needed from the text.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://progrium.com/localtunnel/&quot;&gt;&lt;strong&gt;Localtunnel&lt;/strong&gt;&lt;/a&gt;: Localtunnel, hosted by Twilio, allows you to expose an endpoint on your local server to receive HTTP requests from other servers. This is important when you are using a service that will send you &lt;a href=&quot;http://en.wikipedia.org/wiki/Webhook&quot;&gt;webhooks&lt;/a&gt; (Twilio, Mandrill inbound emails, etc.), so you don&amp;#x2019;t have to push your changes to a production server in order to test whether your app correctly processes the POST request to your endpoint. With Localtunnel, you just follow the instructions on the &lt;a href=&quot;http://progrium.com/localtunnel/&quot;&gt;site&lt;/a&gt;, copy and paste the localtunnel URL/endpoint generated (tied to your local server), and provide it to the web service so it knows the address to send its request, thereby allowing you to test locally.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;View Elements in Developer Tools&lt;/strong&gt;: In Chrome (Firefox and Safari, also), you can view the HTML document of each page you are on by going to View &amp;gt; Developer &amp;gt; Developer Tools (or Option + Command + I). This is important when you are using &lt;a href=&quot;http://mechanize.rubyforge.org/&quot;&gt;Mechanize&lt;/a&gt;, which allows you to parse HTML given the HTML element, id, class, name, etc. I would test code by using &lt;a href=&quot;http://en.wikipedia.org/wiki/Interactive_Ruby_Shell&quot;&gt;IRB&lt;/a&gt;, initialize a Mechanize object, open up the browser, and navigate the web from the terminal.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Feedback is always welcome. If you think you are going to forget to use this next time you fly Southwest, go into your Gmail account right now and set up an instant email forwarding. Go to your Gmail&amp;#x2019;s Settings &amp;gt; Forwarding and POP/IMAP &amp;gt; Forwarding, then select Add a Forwarding Address. Type in &amp;#x201C;sw@to.andyjiang.com&amp;#x201D; and send the verification email that will contain the confirmation code.&lt;/p&gt;
&lt;p&gt;You will receive shortly an email that will provide you with the confirmation code that you can enter in the above field. The return email will also include a link that you can just click on to verify and confirm sw@to.andyjiang.com as the new forwarded email address.&lt;/p&gt;
&lt;p&gt;Once you confirmed the email address to allow you to auto forward to it, then you will have to set up the filter for the right emails to be auto forwarded. Click on the link in the tip &amp;#x2018;You can also forward only some of your mail by creating a filter!&amp;#x2019; and then either copy and paste &amp;#x201C;from:southwest subject:(Your trip is around the corner)&amp;#x201D; into your Gmail search bar or use the template in your &amp;#x2018;Show Search Options&amp;#x2019; drop down below.&lt;/p&gt;
&lt;p&gt;That should set it up so that any future email from Southwest with that particular subject will be automatically forwarded to my web app, which should hopefully check you in so you won&amp;#x2019;t have to sit in the back between the two fat, sweaty guys.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Vipassana Meditation: Ten Long Days and a Few Negligible Steps Towards Enlightenment</title>
    <link href="http://blog.andyjiang.com/ten-long-days-and-a-few-negligible-steps-towards-enlightenment"/>
    <id>http://blog.andyjiang.com/ten-long-days-and-a-few-negligible-steps-towards-enlightenment</id>
    <updated>2012-01-25T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;You are in a forest, but its possible to leave the forest for a fabled, harmonious land of rolling grassy fields. All you have is a deprecated compass and your walking shoes. One day, you come across a man who claims he can help you fix your compass..&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;You are in a forest, but its possible to leave the forest for a fabled, harmonious land of rolling grassy fields. All you have is a deprecated compass and your walking shoes. One day, you come across a man who claims he can help you fix your compass..&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: Everything I learned about Vipassana was taught by S.N. Goenka in our evening hour long discourses after a long day of meditation, at my mind&amp;#x2019;s peak malleability. As a result, take everything with a grain of salt. If you are curious, you are welcome to do your own research or attend one of these 10-day courses.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;day-0-s-la-morality-&quot;&gt;Day 0: S&amp;#x12B;la (morality)&lt;/h2&gt;
&lt;p&gt;The essence of Vipassana is to reduce misery and suffering in our lives by acknowledging the universal laws of nature and impermanence, or the law of Dhamma as it is known in Gotama the Buddha&amp;#x2019;s language of pal&amp;#x12B;, that everything is constantly changing and any attachment towards something that is in a constant state of flux is futile and will lead to unhappiness. The current habit pattern of our minds, consciously or unconsciously, is to react to various external inputs by innately generating feelings of either desire or aversion. These feelings of desire and aversion, if we don&amp;#x2019;t appease them (if you can&amp;#x2019;t get something that you want or get away from something you don&amp;#x2019;t want) will ultimately lead to misery. Since these feelings can be stopped by recognizing the law of nature, particularly the law of impermanence, teachers of Vipassana (~600 B.C.) believed that this technique is universal and can be practiced by anyone, regardless of his/her religious beliefs, heritage, community, etc.&lt;/p&gt;
&lt;p&gt;For our 10-day course, we had the pleasure of being taught by S.N. Goenka, an Indian businessman born in Burma, who is now one of the main drivers behind this global Vipassana movement (there are Vipassana centers, similar to the one that I went to in Northern California, all over the world. Additionally, since the organization is non-profit, these centers are solely based on volunteer donations).&lt;/p&gt;
&lt;p&gt;According to Goenka, Vipassana is one of India&amp;#x2019;s most ancient meditation techniques. It was &amp;#x2018;rediscovered&amp;#x2019; 2,500 years ago by Gotama the Buddha (Siddhartha) and was taught to many people across Asia. However, over hundeds of years, Vipassana lost its pure form because people started attaching religious symbols and doctrines to what was intended to be a universal technique. However, only in Burma was this technique preserved in its &amp;#x201C;purest&amp;#x201D; form. And Goenka, though at first taught the technique to his sick mother back in India, eventually spread the technique around the world as more and more people found interest. Now there are hundreds of centers on all of the habitable continents.&lt;/p&gt;
&lt;p&gt;The foundation of Vipassana is to observe certain precepts to guide the individual on living a more moral life. But with only ten days to learn and practice the Vipassana technique, the course is structured to maximize the limited time that we had to carve carefully out of our routine lives (from full-time work or student life). To achieve an experience that will yield the strongest results, the students&amp;#x2019; lives were to mimic as closely as possible to that of a monk. This includes no eye contact with any other student, no speaking (except teachers), no interaction with the opposite gender, no contact with the outside world (you are expected to leave your phones in the car or with the course managers before the ten days begin), speak no lies (easy as we weren&amp;#x2019;t able to talk), and no audible flatulence (no speaking out of your ass). Observing these moral precepts provide us with a strong foundation to begin our journey along the Noble Eight-Fold Path.&lt;/p&gt;
&lt;p&gt;Excited and curious, Mike and I signed up to get a better understanding of Vipassana. What is on the other side?&lt;/p&gt;
&lt;p&gt;Upon arrival in the evening, we check out the facilities. While in our dormitories, I was shocked to learn the monks don&amp;#x2019;t live with mini-fridges stocked with Redbull and Snapple, as well as an alarm clock with an iPod dock. Those monks have much to learn.&lt;/p&gt;
&lt;p&gt;In order to encourage students to practice meditation, as boring as we all (correctly) perceive it to be, the course had to eliminate anything and everything else that would be even remotely more interesting in comparison. As a result, everything mildly interesting thing with which you could occupy yourself was removed from the environment. Had there been just a single page ripped out of Charles Dickens&amp;#x2019;s &amp;#x201C;Great Expectations&amp;#x201D; laying in the common area, by day 10 all of the students would have memorized the entire text passage backwards and forwards, as well as have been able to provide an extensive analysis of the era&amp;#x2019;s crime, social class, empire, and ambition, on the personal development of Pip.&lt;/p&gt;
&lt;p&gt;With absolutely nothing to do, I would have to do the next logical step: to abuse the most potent chemical substance we had in our possession: the caffeine in the Celestial green tea. Anything to keep my mind occupied.&lt;/p&gt;
&lt;p&gt;Our first evening meditation was scheduled for that night, after which the vow of Nobile Silence would be placed on us. Mike and I hug, &amp;#x201C;see you on the other side&amp;#x201D;, and take our first steps into the unknown.&lt;/p&gt;
&lt;h2 id=&quot;day-1-3-sam-dhi-mastery-of-the-mind-&quot;&gt;Day 1-3: Sam&amp;#xE3;dhi (mastery of the mind)&lt;/h2&gt;
&lt;p&gt;The daily schedule for the coming 10 days are as follows (it is posted in the Dining Hall so no speaking is necessary):&lt;/p&gt;
&lt;p&gt;4:00am, First bell is rung to wake up
4:20am, Second bell is rung
4:30am, Meditate in the Meditation Hall or in your room (aka sleeping)
6:30am, Breakfast in the Dining Hall
8:00am, Mandatory Group Sitting in the Meditation Hall
9:30am, Meditate in the Meditation Hall or in your room
11:00am, Lunch in the Dining Hall
12:00pm, Interviews with the assistant teachers (you must sign up in advance)
1:00pm, Meditate in the Meditation Hall or in your room
2:30pm, Mandatory Group Sitting in the Meditation Hall
4:00pm, Meditate in the Meditation Hall or in your room
5:00pm, Tea in the Dining Hall
6:00pm, Mandatory Group Sitting in the Meditation Hall
7:00pm, DVD Discourse viewing of living a misery-free life from S.N. Goenka
8:00pm, Mandatory Group Sitting in the Meditation Hall
9:00pm, Get ready for bed
10:00pm, Lights out&lt;/p&gt;
&lt;p&gt;Or for the lay person:&lt;/p&gt;
&lt;p&gt;4:00am, Wake up
4:30am, Meditate
6:30am, Breakfast
8:00am, Meditate
11:00am, Lunch
1:00pm, Meditate
5:00pm, Tea
6:00pm, Meditate
9:00pm, Sleep&lt;/p&gt;
&lt;p&gt;Or the schedule that most closely reflects reality:&lt;/p&gt;
&lt;p&gt;4:00am, Wake up
4:30am, Meditate in the Meditation Hall
5:15am, Go back to your room because you are tired from insomnia last night
6:29pm, Stand outside of the dining hall because you are bored of sitting in your room
6:30am, Breakfast
6:36am, Finish eating breakfast
6:37am, Kick myself for eating breakfast so quickly
6:38am, Stare out of the window sipping on cup after cup of green tea
7:15am, Crawl back to my bed and lay there counting the minutes until 8am group sitting
8:00am, Group sitting in the Meditation Hall
9:00am, Unfold my contorted body for a short intermission
9:01am, Perform all stretching techniques (as taught by Tony Horton) that I can remember to regain sensation in my legs and back
9:05am, Begin meditating again
9:30am, Assistant teachers allow students to practice in their rooms
9:45am, Leave the Meditation Hall to walk along one of the trails in the woods, in endlessly circular fashion
10:20am, Crawl into my bed to meditate with my back against the wall
10:23am, Collapse into my bed, sleeping
11:00am, Lunch!
11:07am, Kick myself for eating lunch so quickly
11:08am, Stare out of the window sipping on cup after cup of green tea
11:30am, Go back to quarters. Maybe take a shower. Maybe meditate in bed (aka sit idly there until I fall asleep)
12:45pm, Walk around the outside trails. Make a rock formation of some sort. Play with some pinecones
1:30pm, Head over to the Meditation Hall to meditate
2:30pm, Group sitting begins
3:30pm, Stretch, strive to crack every crackable knuckle in my body
3:40pm, Begin meditating again
4:00pm, Assistant teachers allow students to practice in their rooms
4:03pm, Kick myself for getting back to my room so quickly. Sit idly for several minutes
4:06pm, End up falling asleep in bed
4:50pm, Wake up and wait around outside the Dining Hall for 5pm tea
5:00pm, Tea break
5:03pm, Stare boringly out of the window
5:30pm, Go back to the dormitories and brush my teeth
5:33pm, Crawl into bed and lay there counting down the minutes until 6pm group sitting
6:00pm, Group sitting in the Meditation Hall
7:00pm, Intermission before Goenka&amp;#x2019;s evening discourse
7:05pm, Teachers put Goenka&amp;#x2019;s DVD into the DVD player. Discourse begins
8:05pm, Another intermission before late evening meditation sitting begins
8:10pm, Begin meditating again
9:00pm, &amp;#x201C;Take rest&amp;#x201D;. Meditation ends and assistant teachers allow us to get ready for bed
9:04pm, Crawl into bed and try to fall asleep as soon as possible
2:31am, Fall asleep&lt;/p&gt;
&lt;p&gt;The first meditation technique that we learned and practiced for these three days is Anapana&amp;#x2014;to focus the mind on the natural breath. In line with the general principal of refraining from concentrating on pleasant or unpleasant thoughts, past or future thoughts, we block out all mind chatter by bringing our attention to our natural respiration. It is important, Goenka emphasizes, that we don&amp;#x2019;t verbalize or visualize anything to help us calm our minds and to focus on the breathing, as it could lead to people associating religious names or images with the technique and lessen its universal quality.&lt;/p&gt;
&lt;p&gt;Beginning with observation of the breath and the sensations around the nostrils is to sharpen the mind&amp;#x2019;s sensitivity. Anapana is a tool that we must develop before we can practice Vipassana, which is observing the sensations, not only around the nostrils, but the entire body. And we have three days to practice.&lt;/p&gt;
&lt;p&gt;The first day is pretty challenging and painful, but, like a good masochist, I ignore my discomfort. Its easy to become distracted from your natural breath; you are breathing constantly, why must I give all importance in my mind do something that just happens? At first I would spend twenty seconds observing my respiration, only to find myself thinking about something else: I wonder if I got Coachella tickets. I wonder what my roommates are doing. I must remember to send that email to my friend. Remember that one time&amp;#x2026; continuously. Then I would start again. Having never meditated before in my life, I have never realized the complete random sequence of thoughts I had in my mind.&lt;/p&gt;
&lt;p&gt;So Goenka tells us: our minds generate four types of thoughts: past or future, pleasant or unpleasant. It is these thoughts that cause us to attach desire/aversion to the objects in our life. In order to narrow the mind to the present moment, Goenka wants us to focus solely on our natural breath, as the breath is the only true current reality. Once the mind has been trained to observe the breath, it begins to observe sensations around the body, as these also reflect the true realities of the moment. Through practice and hardwork, you will progress further along the Nobile Eight-fold Path by observing subtler and subtler bodily sensations. Until you become a Buddha and are able to experience all of your subatomic particles constantly changing at immeasurable frequencies. This is the path to Enlightenment.&lt;/p&gt;
&lt;p&gt;Every evening, there is a one-hour discourse from Goenka, where he provides some clarification to the meditation technique, as well as imparts Buddhist principals through stories of the life of Guatama Buddha. The teachers pop Goenka&amp;#x2019;s dvds into the dvd player and hit play, then resume their quiet meditation. Then, for the next hour, Goenka dispenses nuggets of wisdom through a 50&amp;#x201D; Toshiba flatscreen television. Though I would&amp;#x2019;ve preferred my daily digest of Buddhist fables in tweets less than 140 characters or artfully placed behind the Lomo-fi filter on Instagram, I will take what I can get.&lt;/p&gt;
&lt;p&gt;By day two, since there is no speaking or eye contact or noisy flatulence or Redbulls waiting in my non-existent mini-fridge, I find myself quieting my mind&amp;#x2019;s chatter much sooner. And when my mind did wander, it did in a more rationally; less jumping from complete random thread to complete random thread, more flowing in a logical manner. In the woods, Anapana was helping me calibrate my wildly moving compass. I was on my way out of the woods, I could feel it.&lt;/p&gt;
&lt;p&gt;In the Meditation Hall, everyone has his/her own seat cushions setup for comfort. Some people piled cushions upon cushions upon cushions. Obviously, the higher you are, the better you meditate&amp;#x2013;why else do monks meditate up in the Himalayas, among the mountains? I see others piling these softer yoga blocks to provide some back support. Might as well import in a LA-Z-BOY recliner and meditate on that. There are others, the hardcore ones, who just sit on the ground or on one small angled kneeling stool. Admirable. Then I notice that the man beside me had a Yves Saint Laurent meditation seat cushion. I look at my own motley pile of secondhand cushions. On the Noble Eight-fold expressway to Enlightenment, he was driving a Maybach, while I was pedaling a tricycle. It will be a long ten days.&lt;/p&gt;
&lt;h2 id=&quot;day-4-9-pa-wisdom-&quot;&gt;Day 4-9: Pa&amp;#xF1;&amp;#xF1;&amp;#x101; (wisdom)&lt;/h2&gt;
&lt;p&gt;The fourth day is the first day we are taught the Vipassana meditation technique. While before we were sharpening our mind&amp;#x2019;s sensitivity to bodily sensations by focusing on the area around our nose, now we expand our observation to the entirety of our body. In order to progress, to observe subtler and subtler sensations, two things are important. Awareness and equanimity. Yes, I left my life for ten days to receive vocabulary lessons from a foreigner. Equanimity, or the act of being equanimous, is to keep your mind from desire or aversion&amp;#x2014;to have a completely balanced mind. When you come across a sensation on the body that is an unpleasant sensation, you must stop yourself from generating the feeling of aversion towards it. Similarly, when you are experiencing a pleasant sensation, you must refrain from generating the feeling of desire. After all, everything is constantly changing: those bodily sensations will eventually go away, even if on an astronomical scale of time. Eventually. Through awareness and equanimity, our mind will become sharper and more sensitive, thereby allowing us to observe subtler sensations.&lt;/p&gt;
&lt;p&gt;In addition to the new meditation technique, there was another surprise (or form of torture). Starting on day 4, every group sitting will be Addithana, otherwise known as &amp;#x201C;Sittings of Strong Determination&amp;#x201D;. In these three-per-day, one hour power sittings, students are asked not to open their eyes or move at all, as it helps the mind observe, with utmost equanimity, the sensations of the body.&lt;/p&gt;
&lt;p&gt;Observing the sensations on my body was unusual at first. Anapana, compared to Vipassana, was child&amp;#x2019;s play. Goenka asks us to scan our body, top to bottom, bottom to top. Go through each part of the body separately and observe the sensations on that area. Body sensations can include anything&amp;#x2013;heat, cold, perspiration, itching, pressure, pain&amp;#x2013;anything. Whether the sensations are pleasant or unpleasant, we must remain equanimous. If we observe dull, unpleasant sensation, Goenka advises us to &amp;#x201C;smile and move onto next body part; understand that these feelings are impermanent, will continuously change, as it is the universal law of nature, law of Dhamma&amp;#x201D;.&lt;/p&gt;
&lt;p&gt;So we begin. No matter what you are feeling on your body, you must remain equanimous, balanced. You are not to react&amp;#x2013;only to observe from an outsider&amp;#x2019;s perspective. &amp;#x201C;My foot fell asleep&amp;#x201D;. Just observe. Remain aware. Be equanimous. &amp;#x201C;My leg is getting a cramp&amp;#x201D;. Just observe. Remain aware. Be equanimous. &amp;#x201C;There is a sharp pain in my back&amp;#x201D;. Just observe. Remain aware. Be equanimous. &amp;#x201C;But my erection has not gone away after four hours&amp;#x201D;. Just observe. Remain aware. Be equanimous.&lt;/p&gt;
&lt;p&gt;Without equanimity, the feeling of aversion towards the pain in your leg could be amplified in your mind, derailing its balance. According to Goenka, &amp;#x201C;you are adding mental pain to physical pain, and that is unnecessary&amp;#x201D;.&lt;/p&gt;
&lt;p&gt;Like a skateboarder, constantly pushing and stretching his/her abilities to balance with more advanced grinds, jumps, and tricks, so to is a Vipassana meditator continuously sharpening his/her equanimity through observing increasingly sensitive bodily sensations. At first Goenka asks you to observe easy sensations on your body such as the fabric of your clothes or the breeze of the air. Then, if your mind remains equanimous enough, you may continue to observe a free flow of vibrations throughout certain parts of your body. The final stage, according to Goenka, is where you are fully aware of the rapid dissolution and formation of your body on the tiniest subatomic scale.&lt;/p&gt;
&lt;p&gt;Day 6, Goenka (correctly) advices, is notoriously difficult: &amp;#x201C;one feels like running away&amp;#x201D;. Whenever my body scans were interrupted by a dull sensation, mind chattering begins and I lose focus and concentration. I was not equanimous. Other, more fortunate times, I successfully experienced subtler sensations of slight tingling on my arms and legs. I consciously tell myself to not generate feelings of attachment to this sensation and to remain equanimous: this, too, will change. For unbelievably brief moments, the &amp;#x201C;subtle vibrations&amp;#x201D; flow through my body as if I was contiously dipping myself in a bath of the most luxurious oils and salts. Must be the caffeine.&lt;/p&gt;
&lt;p&gt;By days 8 and 9, meditation is getting almost unbearable. In the sitting community, when you are unable to quiet your mind and focus on the meditation technique, it is called a &amp;#x201C;storm&amp;#x201D;. I am having a tempest. My mind starts wandering:&lt;/p&gt;
&lt;p&gt;I wonder what the Enlightenment city would be like. Probably a Starbucks on every corner. Probably a guided walking tour that ends in a souvenir shop. Would there be sales tax?&lt;/p&gt;
&lt;p&gt;Was the quinoa and kale for lunch today a subtle reference to the popular 90&amp;#x2019;s Nickelodeon television series featuring the black comedic duo, Kenan and Kel?&lt;/p&gt;
&lt;p&gt;The man to my left belches violently. With an odor that vulgar, a stench that foul, not even Guatama Buddha himself could remain equanimous.&lt;/p&gt;
&lt;h2 id=&quot;day-10-the-journey-is-just-beginning&quot;&gt;Day 10: The journey is just beginning&lt;/h2&gt;
&lt;p&gt;The tenth day finally arrives and not a moment too soon. After our morning meditation session, the vow of Noble Silence will be lifted. I can&amp;#x2019;t wait to finally, and loudly, relieve the gaseous pressure building in my lower intestines without sneaking a cheek.&lt;/p&gt;
&lt;p&gt;We also learn a new meditation technique, a &amp;#x201C;balm for the deep operative surgery of Vipassana&amp;#x201D; to heal ourselves, called Metta Bhavana. This technique is to permeate the free flow of love and compassion out of bodies to those around us and all over the world, to share our love, peace, and happiness with all beings. I wasn&amp;#x2019;t quite sure I was doing it right, as all I thought about were happy thoughts. Even though it required some mental exertion, it was a nice break to Vipassana.&lt;/p&gt;
&lt;p&gt;The moments immediately after the silence was lifted were joyous. The dining hall and dormitories begin to fill with laughter and conversation; people recounting the past ten days for themselves, people bonding over shared miseries of the course, the insomniac nights, the torturous sittings. Contact information is exchanged.&lt;/p&gt;
&lt;p&gt;Unfortunately, we can&amp;#x2019;t leave the camp until the morning of Day 11. The rest of the meditation sittings were going to be unproductive and miserable. But recognize that this, too, will change.&lt;/p&gt;
&lt;p&gt;There were some closing remarks from Goenka, about the merits of donations, especially volunteering, as any gift to allow others to learn the law of Dhamma is the most priceless gift. As mentioned earlier, my opportunity to come to learn and practice Vipassana is due to the donations and graciousness of those who proceeded me on the Noble Eight-fold Path. I feel incredibly grateful. And I can&amp;#x2019;t wait to tweet/Facebook/Instagram/blog about the whole thing. I look forward to climbing into that car and driving off to see my lovely roommates!&lt;/p&gt;
&lt;p&gt;Of course, Vipassana is only one way of finding inner peace, connecting with something larger than yourself, and living a happy and joyous life. All religions strive to provide that opportunity for its believers. Regardless of the rites and rituals one practices, dogmas and doctrines one believes, holy names or images one uses, as long as the qualities and characteristics&amp;#x2014;infinite love and compassion&amp;#x2014;of these saints are emulated, then happiness for you and those around you can flourish.&lt;/p&gt;
&lt;p&gt;Ten long, challenging days later and I am only tripping over myself on the first few steps of the Noble Eight-fold Path. Despite still in the forest, I have been handed a manual on how to fix my compass. Goenka highly encourages the students to continue practicing Vipassana twice everyday: one hour sittings in the morning and in the evening. Good luck sticking to that resolution; with our tight schedules of working jobs, staying fit at the gym, finding time to meet with friends and family, staying in touch with your 800 other friends on Facebook via passively &amp;#x201C;Liking&amp;#x201D; their statuses, and ekeing out a few hours to sleep at night, it can be difficult squeezing in two hours of meditation per day. Though we live in the Western society, one deeply rooted in the ailing free market, expensive health care and social security, mentality of infinite borrowing, and workaholic requirement to achieve financial success, we can always pursue its misery-freeing alternative: find a steady 9-5 job, make enough money to send your children to college, and have enough left over to afford a therapist, or, at the least, some xanax pills.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Bhavatu Sabba Mangalam &amp;#x2013; may all beings be happy.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks go to Alvin, Steve, Shelley, and Pauline for reviewing a draft of this entry.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TextMe: A Bookmarklet That Lets You Send Highlighted Text In Your Browser To Your Phone</title>
    <link href="http://blog.andyjiang.com/textme"/>
    <id>http://blog.andyjiang.com/textme</id>
    <updated>2012-01-09T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;TextMe! is straightforward to use: type in your phone number in the field and generate a link that is then dragged to your toolbar. Whenever you want to text yourself something, just highlight it in the browser and click the bookmarklet.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;TextMe! is straightforward to use: type in your phone number in the field and generate a link that is then dragged to your toolbar. Whenever you want to text yourself something, just highlight it in the browser and click the bookmarklet.&lt;/p&gt;
&lt;h2 id=&quot;textme-&quot;&gt;TextMe!&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;NOTE: Since I am no longer employed at Twilio, my Twilio account is no longer funded and therefore this bookmarklet no longer is operating. However, you can build your own and use your own Twilio account!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A few weeks ago, I built this derpy little bookmarklet that lets you send highlighted text in your browser to your phone as an SMS. My friend Jen actually inspired this app and I realized how useful it would be when I&amp;#x2019;m on my way out and don&amp;#x2019;t want to retype the address of the restaurant into my phone. I also felt that this would be a good project to improve my javascript (I&amp;#x2019;ve never written a bookmarklet), as well as learn to work around Cross-Origin Resource Sharing.&lt;/p&gt;
&lt;p&gt;The technology stack for this project is HTML/css/javascript/jQuery, Rails, Ruby, Heroku.&lt;/p&gt;
&lt;h2 id=&quot;things-i-ve-learned&quot;&gt;Things I&amp;#x2019;ve Learned&lt;/h2&gt;
&lt;h3 id=&quot;bookmarklet-javascript&quot;&gt;Bookmarklet Javascript&lt;/h3&gt;
&lt;p&gt;The bookmarklet, essentially, is a function that is executed whenever you click on it. In this case, the function did the following things: attach a script to the HTML document body, execute that appended script, import two functions (&amp;#x201C;getSelText&amp;#x201D; that will capture the highlighted text and &amp;#x201C;sendSMS&amp;#x201D; that will send a POST request to my server, thus sending a request to Twilio to deliver the SMS), and then calling &amp;#x201C;sendSMS&amp;#x201D; that will initiate the SMS delivery.&lt;/p&gt;
&lt;p&gt;Here is the code for the TextMe! landing page. This essentially shows how I took the user&amp;#x2019;s phone number, generated a script (with the particular phone number) that will make the sendSMS call to the server, and put that into an anchor tag that the user can drag to the toolbar. Line 17 is the javascript function that ends up in the bookmarklet that is dragged to the toolbar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;section class=&amp;quot;form&amp;quot;&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;xxx-xxx-xxxx&amp;quot;&amp;gt;
    &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Make my bookmarklet!&amp;lt;/button&amp;gt;
&amp;lt;/section&amp;gt;

&amp;lt;section id=&amp;quot;bookmarklet-container&amp;quot;&amp;gt;
    &amp;lt;span&amp;gt;&amp;lt;p&amp;gt;Your link will be generated below and drag it to your toolbar!&amp;lt;/p&amp;gt;&amp;lt;/span&amp;gt;
    &amp;lt;div id=&amp;quot;bookmarklet&amp;quot;&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    $(document).ready( function() {
        $(&amp;apos;.form &amp;gt; .btn&amp;apos;).click( function() {
            var recipient = $(&amp;apos;.form .input-medium&amp;apos;).val();
            if ( recipient != &amp;quot;&amp;quot; ) {
                var href = &amp;quot;javascript:(function(){var s=document.createElement(&amp;apos;script&amp;apos;);s.src=&amp;apos;http://www.andy-jiang.com/text2.js&amp;apos;;s.onload=function(){sendSMS(&amp;quot; + recipient + &amp;quot;)};document.body.appendChild(s);})();&amp;quot;;
                // Make the draggable bookmarklet.
                var a = document.createElement(&amp;apos;a&amp;apos;);
                a.title = &amp;quot;TextMe!&amp;quot;;
                a.innerHTML = &amp;quot;TextMe!&amp;quot;;
                a.href = href;
                $(&amp;apos;#bookmarklet&amp;apos;).html(a);
            }
        });
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When you click on the bookmarklet after it is dragged on your toolbar, the function appends some javascript to the HTML document and imports the below two functions. Then, once everything is imported successfully, sendSMS is called with the phone number passed as an argument. The function sendSMS will get the selected text and send a request to the server (passing the recipient&amp;#x2019;s phone number and the body of the SMS, which is the highlighted text) to then ultimately send the SMS.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function getSelText() {
  var txt = &amp;apos;&amp;apos;;
  if (window.getSelection) {
    txt = window.getSelection();
  } else if (document.getSelection) {
    txt = document.getSelection();
  } else if (document.selection) {
    txt = document.selection.createRange().text;
  } else return;
  return txt;
}

function sendSMS( recipient ) {
  var body = getSelText();

  if ( body == &amp;apos;&amp;apos; ) {
    alert(&amp;quot;You have not highlighted anything to send to your phone!&amp;quot;);
  } else {
    // Create object.
    var http = new XMLHttpRequest();

    // POST
    var data = &amp;quot;recipient=&amp;quot; + recipient + &amp;quot;&amp;amp;body=&amp;quot; + body;
    var url = &amp;quot;http://www.andy-jiang.com/textme/send_sms/&amp;quot;;
    http.open(&amp;quot;POST&amp;quot;, url, true);
    http.setRequestHeader(&amp;quot;Content-type&amp;quot;, &amp;quot;application/x-www-form-urlencoded&amp;quot;);
    http.send(data);
    alert(&amp;quot;A text was just sent to &amp;quot; + recipient);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;javascript-without-jquery&quot;&gt;Javascript without jQuery&lt;/h3&gt;
&lt;p&gt;Because this is a bookmarklet, the intention was to keep it as lightweight with minimal dependencies. As such, it made sense (and was a great challenge) to write all of the bookmarklet javascript without jQuery to help append scripts and traverse the document object model. Note the substantial amount of jQuery used in the first code sample.&lt;/p&gt;
&lt;h3 id=&quot;cross-origin-resource-sharing-cors-&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/h3&gt;
&lt;p&gt;In computing, an important security concept for browser-side programming was what is known as &amp;#x2018;same origin&amp;#x2019; policy. This policy allows scripts running on the same &amp;#x2018;origin&amp;#x2019; (domain, hostname, web server) to access each other&amp;#x2019;s methods, properties, and attributes with no specific restrictions. However, this policy prevents scripts on one domain to access the methods, properties, and attributes of another domain (imagine if you could write some javascript on my hostname that can call methods on another web server&amp;#x2014;there are obvious security implications and risks involved).&lt;/p&gt;
&lt;p&gt;In some instances, it is necessary to pass data from the client side of one hostname to the server of another domain, as is in the case of this bookmarklet. TextMe! attaches and runs a script on any website on the Internet, which takes the highlighted text and POSTs that data to my humble little WEBricks Heroku-hosted web server. In these cases, CORS is one modern way of allowing for these interactions to happen.&lt;/p&gt;
&lt;p&gt;CORS defines a specific way to allow for cross-domain requests to occur. The browser making the cross-domain request to the server has to pass an &amp;#x2018;Origin HTTP header&amp;#x2019;, indicating its domain. Then, the web server responds with an &amp;#x2018;Access-Control-Allow-Origin&amp;#x2019; header with a value denoting which origin sites are allowed.&lt;/p&gt;
&lt;p&gt;Please see the example from my server side Ruby code below. Line 33 an onward shows the header response with &amp;#x2018;Access-Control-Allow-Origin: *&amp;#x2019;, meaning to allow every cross-domain request.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require &amp;apos;rubygems&amp;apos;
require &amp;apos;twilio-ruby&amp;apos;
require &amp;apos;net/http&amp;apos;
require &amp;apos;uri&amp;apos;
require &amp;apos;json&amp;apos;

class TwilioController &amp;lt; ApplicationController
  TWILIO_ACCOUNT_SID = &amp;apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;apos;
  TWILIO_ACCOUNT_TOKEN = &amp;apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;apos;
  SENDER_NUMBER = &amp;apos;+xxxxxxxxxx&amp;apos;

  def send_sms
    set_access_control_headers
    head :ok

    # Get recipient phone number from POST.
    number = params[&amp;quot;recipient&amp;quot;]

    # Get body from POST.
    body = params[&amp;quot;body&amp;quot;]

    # Send sms.
    twilio_client = Twilio::REST::Client.new TWILIO_ACCOUNT_SID, TWILIO_ACCOUNT_TOKEN
    twilio_client.account.sms.messages.create(
      :from =&amp;gt; &amp;quot;#{SENDER_NUMBER}&amp;quot;,
      :to   =&amp;gt; &amp;quot;#{number}&amp;quot;,
      :body =&amp;gt; &amp;quot;#{body}&amp;quot;
    )
    render :file =&amp;gt; &amp;apos;app/views/twiliocon/index.html&amp;apos;
  end

  private
  def set_access_control_headers
    headers[&amp;apos;Access-Control-Allow-Origin&amp;apos;] = &amp;apos;*&amp;apos;
    headers[&amp;apos;Access-Control-Allow-Method&amp;apos;] = &amp;apos;POST, GET, OPTIONS&amp;apos;
    headers[&amp;apos;Access-Control-Max-Age&amp;apos;] = &amp;apos;1278000&amp;apos;
    render :json =&amp;gt; { :success =&amp;gt; true }
    end
end
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that I didn&amp;#x2019;t include any phone number validation, which should probably be included to some extent.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;For a quick project, TextMe! certainly challenged me in new areas and helped me learn as a developer. Understanding how bookmarklets worked, writing jQuery-free javascript, and getting a better grasp of Cross-Origin Resource Sharing proved to be achievable, yet challenging goals.&lt;/p&gt;
&lt;p&gt;Features to add in next version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easier to drag the bookmarklet to the toolbar&lt;/li&gt;
&lt;li&gt;form validation for the phone number!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So try it out and let me know what you think!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Jen for the original idea, Yuning for proofreading a draft of this in 30 seconds, as well as Mike and Song who helped out with various engineering aspects of the project.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tips to Become a Winning Financial Analyst</title>
    <link href="http://blog.andyjiang.com/tips-to-become-a-winning-financial-analyst"/>
    <id>http://blog.andyjiang.com/tips-to-become-a-winning-financial-analyst</id>
    <updated>2011-09-22T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;Like everything in life, navigating the confusing intertwining branches and brambles of the financial analyst jungle is a game. Winning requires steady focus, a strong stomach and disposition, and the expectation that you will get shat on multiple times per day. I have compiled below a short list of tips and tricks to help analysts orient themselves in the fast paced environment, full of egos and death traps that will take the most promising career at the drop of a hat, to ultimately succeed in the race to the top.&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;Like everything in life, navigating the confusing intertwining branches and brambles of the financial analyst jungle is a game. Winning requires steady focus, a strong stomach and disposition, and the expectation that you will get shat on multiple times per day. I have compiled below a short list of tips and tricks to help analysts orient themselves in the fast paced environment, full of egos and death traps that will take the most promising career at the drop of a hat, to ultimately succeed in the race to the top.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Make sure to get a loud keyboard&lt;/strong&gt;: If they can&amp;#x2019;t see you working, they better hear you working. Sometimes I would intentionally slam away on my keyboard to make sure those around me know that I am cranking out memos. Even when playing Yahoo! text twist, I make the keyboard my bitch everytime I type a letter. A sub-tip would be to increase your typing and decrease your mouse clicking when bosses approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Always look busy as hell, but accept new assignments happily&lt;/strong&gt;: Even if you are surfing dealbreaker and playing minesweeper, as soon as your boss comes around, do the following: sigh but with a smile on your face, appear flustered but eager to take on the new task, and say &amp;#x201C;I have a lot on my plate right now, but I feel this new assignment will help me learn more about [insert boring subject here] I am more than happy to accept.&amp;#x201D; This will give everyone the illusion that you are working much harder than you are, but also that you enjoy more responsibilities, which will land you the position of &amp;#x2018;go-to analyst&amp;#x2019;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Do not make eye contact with anyone on friday afternoons&lt;/strong&gt;: Everyone needs their weekend. Just because you are working at a bulge bracket bank suckling the tender teats of egos-gone-awry does not mean you are forced eat seamless orange-chicken at your desk on a friday night. Friday afternoons is right when bosses come around the floor looking for defenseless prey who would happily spend their weekends working on an assignment that will ultimately be tucked away into a folder on the shared drive for nobody else to see. When friday 2pm rolls around, you better glue your eyes to dealbreaker.com or minesweeper and hope to sneak out by 5pm. Being well rested on weekends will undeniably restore energy for the upcoming work week.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Know your windows hotkeys&lt;/strong&gt;: This tip really should have gone unspoken. if you don&amp;#x2019;t know basic windows hotkeys, then shame on you. You don&amp;#x2019;t belong behind a computer, let alone working as a financial analyst. alt-tab, alt-escape are wonderful for when your boss comes over and you were just watching a hilarious video on geekologie, and you need to give off the impression that you were cranking away at an excel model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Leave a jacket or bag at your desk even after you leave for the day&lt;/strong&gt;: This will give off the impression that you just stepped away momentarily from your desk and that you plan to return to continue working. Should someone request your immediate attention on something via email, just respond saying you were downstairs grabbing a coffee from the nearby deli and will return (begrudgingly) shortly. Bonus points for: changing your screensaver to an excel spreadsheet, jamming a pencil into your spacebar to keep the screensaver from appearing, using a fake cellphone or purse to solidify the impression that you will be returning shortly, and creating a complete body double to sit in your place to do your work. EDIT: can also leave a half-eaten apple or sandwich on your desk, but there are some risks to this tactic&amp;#x2013;if maggots or flies appear on the food, then either your illusion of constantly working is shattered or people start thinking you are disgusting (contributed by Shelley Yang).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The key is to remember that retention compensation is not directly correlated with the quality and output of your work over the past year, but it is based entirely on the perception of the quality and output of your work over the past year.  of course, it doesn&amp;#x2019;t hurt to actually take pride in the quality of your work, but if you neglect to play the game for what its worth, you may not be doing yourself a favor.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Economy</title>
    <link href="http://blog.andyjiang.com/the-economy"/>
    <id>http://blog.andyjiang.com/the-economy</id>
    <updated>2009-07-20T00:00:00.000Z</updated>
    <author>
      <name>Andy Jiang</name>
    </author>
    <summary type="html">&lt;p&gt;we are almost there. teetering on the edge, straddling the days of our sheltered suburban public education on one side and a world clouded with uncertainty, hope, and discovery on the other. great, now is the time to finally put to use the hours we spent struggling to attain the ‘outstanding mark’ in penmanship in the third grade, the knowledge we learned while repackaging the analysis of ‘the Great Gatsby’ from sparknotes.com for AP Lang, and the understanding of complex social dynamics only derived from stomaching one too many middle school dances. did we ever really know what we were getting ourselves into? what is the long term goal of late night papers and math problem sets?&lt;/p&gt;
</summary>
    <content type="html">&lt;style&gt;
a &gt; img { display: none; }
a:hover &gt; img { display: block; position: absolute; z-index: 99 }
&lt;/style&gt;&lt;p&gt;we are almost there. teetering on the edge, straddling the days of our sheltered suburban public education on one side and a world clouded with uncertainty, hope, and discovery on the other. great, now is the time to finally put to use the hours we spent struggling to attain the &amp;#x2018;outstanding mark&amp;#x2019; in penmanship in the third grade, the knowledge we learned while repackaging the analysis of &amp;#x2018;the Great Gatsby&amp;#x2019; from sparknotes.com for AP Lang, and the understanding of complex social dynamics only derived from stomaching one too many middle school dances. did we ever really know what we were getting ourselves into? what is the long term goal of late night papers and math problem sets?&lt;/p&gt;
&lt;p&gt;to make money, my parents said. allright then, making money. but i may have deceived myself into thinking i knew what this meant. selling lemonade or something like that, some milton bradley baby shit. any retard with basic arithmetic skills can do that.&lt;/p&gt;
&lt;p&gt;and only a private university&amp;#x2013;excuse me, a technical/vocational school like NYU stern finance&amp;#x2013;can fully prepare me for cubicle life. how exciting! the brochure would tell me, while i flip through glossy pictures of smiles, handshakes, opportunities, and success. the world of cubicle life is a world of glory, fighting on the front lines of the battle of finance, always in the line of fire, in the middle of action! and of course, opportunities for great success and money. every word i read made me more excited to be a part of this giant machine that, as they claim, drives the innovation and progress of mankind. i was sold. so where do i sign up, when can i put on that crisp new suit, when do i get my first six figure paycheck?&lt;/p&gt;
&lt;p&gt;not so fast, they told me. NYU, the world of finance, wall street, like any organization, requires people to jump through a series of hoops. sure, its not like i&amp;#x2019;ve never done that before. so i did. take these classes, join these clubs, say these lines, go through these motions, network like this, don&amp;#x2019;t act too interested, don&amp;#x2019;t act too desperate. before i knew it, it was more than just some plain old pony tricks. it soon became a method of thinking, a way of life. i went in play-doh(tm), molded myself into a small cog, and came out a small piece, uniform with thousands of other pieces, ready to be placed into a big machine. soulless, unthinking, slave.&lt;/p&gt;
&lt;p&gt;but i kept qualifying the molding process. its ok, i&amp;#x2019;ll work for a few years and get out, no biggie.&lt;/p&gt;
&lt;p&gt;then i was called to duty. the job description detailed all the battle action i will be engaging in, all the excitement and thrill of being on the front line. the financial landscape is constantly changing, always dynamic. be prepared to think quickly on your feet, solve challenging problems on the fly. no weak stomachs, it warned. this is what i believed i was born to do. and damn was i determined to do one hell of a good job.&lt;/p&gt;
&lt;p&gt;welcome to cubicle life, i triumphantly told myself. this is it, i made it, i&amp;#x2019;m doing it. even if i&amp;#x2019;m failing miserably, i&amp;#x2019;m doing it. chasing the so-called dream, or was it the dream that they told me i should be chasing? it doesn&amp;#x2019;t matter anymore.&lt;/p&gt;
&lt;p&gt;rows and rows and columns and columns of cubicles. people silently tapping away at their keyboards. everyone connected to their computers, hands to the keyboards, eyes to the screens, minds to the computers. this is it, the white collar work place. just like every stereotype of an office that i have seen on TV or in the movies. i&amp;#x2019;m ready to get started, to get plugged into this giant machine we affectionately refer to as &amp;#x2018;The Economy&amp;#x2019;. i am one impatient baby.&lt;/p&gt;
&lt;p&gt;a cold voice refers me to my desk. Row 42, Column AB, like the grid of cubicles is an excel worksheet. on my desk i find two monitors. its like they knew i had ADD, or if i didn&amp;#x2019;t have ADD, i soon will get ADD. i get settled in my black office chair, mess around with the seat height and swivel around in it, feeling the range i get on my chair, how far i can lean back while still being able to use my computer. i fill out some paper work and surf the internet. before i knew it, the work day was ending and people were leaving for home. what a fantastic job, a great first day.&lt;/p&gt;
&lt;p&gt;but soon days blurred into weeks blurred into months. the internet was replaced by excel worksheets and microsoft outlook. any idle time for day dreaming was superseded by number crunching and formatting. my fingers became so intimately familiar with the hot keys of excel that when i am working full throttle, my keyboard sounds like one that belongs to a korean starcraft master. sometimes i would work late nights, motivated to work only by fear of failure from a supervisor. i felt like i was cramming for an exam. and day after day, week after week, this became my life. waking up in the morning to punch out numbers on a computer coming home and sleeping only to do the same thing the next morning. i have become a small cog in the big machine.&lt;/p&gt;
&lt;p&gt;my life is a cubicle. not only are my testicles shackled to my seat, my thoughts are tethered and monitored by the Company. i can only think what is best for the Company, for Corporate America, for the Economy. in the big chess game between dueling forces that determine the direction of our society, mankind, i am a pawn. indispensable. forgettable. i was created to fight in a battle that i know nothing about.&lt;/p&gt;
&lt;p&gt;but i do get paid. and i spend money. and i get paid. and i spend money. sometimes i would catch myself thinking, is there anything more to life than this? probably not. i didn&amp;#x2019;t read it in any glossy brochures or anything.&lt;/p&gt;
&lt;p&gt;they will probably find my dead body laying face down in a cubicle one day, with packaging peanuts scattered around, a few post it notes on my desk, excel silently humming away on my monitors. they will see the wounds on my fingers from banging out numbers a bit too intensely, working excel a bit too ferociously. they will find my eyes glazed and unfocused, figuring that my mind has rotted earlier, leaving only my physical body, with the hot keys ingrained from years of building models, left to continue to work. they will look for any signs of medical illness, any previous record of heart disease or high cholesterol or gout, and upon seeing a clean bill of health, write it off as another casualty. it happens, they will say. another sacrifice, albeit necessary, to maintain and preserve the Economy. and two hours into finding my body, they will reset the computers and clean the packaging peanuts, prepare the desk for a new pawn, young, eager, full of ambition, and unaware of his eventual demise.&lt;/p&gt;
&lt;p&gt;and the Company will continue to recruit. NYU Stern will continue to tell aspiring young minds to forgo their engineering skills to begin a life full of excitement on the front lines of finance. that supporting the Economy is a good thing. that it is the only thing worth living for.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like what you read? Share this article and follow me on &lt;a href=&quot;http://www.twitter.com/andyjiang&quot;&gt;Twitter&lt;/a&gt; for random musings.&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
</feed>